
libVig.o:     file format elf64-x86-64


Disassembly of section .init:

0000000000400460 <_init>:
  400460:	48 83 ec 08          	sub    $0x8,%rsp
  400464:	48 8b 05 8d 2b 20 00 	mov    0x202b8d(%rip),%rax        # 602ff8 <_DYNAMIC+0x1d0>
  40046b:	48 85 c0             	test   %rax,%rax
  40046e:	74 05                	je     400475 <_init+0x15>
  400470:	e8 5b 00 00 00       	callq  4004d0 <malloc@plt+0x10>
  400475:	48 83 c4 08          	add    $0x8,%rsp
  400479:	c3                   	retq   

Disassembly of section .plt:

0000000000400480 <free@plt-0x10>:
  400480:	ff 35 82 2b 20 00    	pushq  0x202b82(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400486:	ff 25 84 2b 20 00    	jmpq   *0x202b84(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40048c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400490 <free@plt>:
  400490:	ff 25 82 2b 20 00    	jmpq   *0x202b82(%rip)        # 603018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400496:	68 00 00 00 00       	pushq  $0x0
  40049b:	e9 e0 ff ff ff       	jmpq   400480 <_init+0x20>

00000000004004a0 <__stack_chk_fail@plt>:
  4004a0:	ff 25 7a 2b 20 00    	jmpq   *0x202b7a(%rip)        # 603020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4004a6:	68 01 00 00 00       	pushq  $0x1
  4004ab:	e9 d0 ff ff ff       	jmpq   400480 <_init+0x20>

00000000004004b0 <__libc_start_main@plt>:
  4004b0:	ff 25 72 2b 20 00    	jmpq   *0x202b72(%rip)        # 603028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004b6:	68 02 00 00 00       	pushq  $0x2
  4004bb:	e9 c0 ff ff ff       	jmpq   400480 <_init+0x20>

00000000004004c0 <malloc@plt>:
  4004c0:	ff 25 6a 2b 20 00    	jmpq   *0x202b6a(%rip)        # 603030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004c6:	68 03 00 00 00       	pushq  $0x3
  4004cb:	e9 b0 ff ff ff       	jmpq   400480 <_init+0x20>

Disassembly of section .plt.got:

00000000004004d0 <.plt.got>:
  4004d0:	ff 25 22 2b 20 00    	jmpq   *0x202b22(%rip)        # 602ff8 <_DYNAMIC+0x1d0>
  4004d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000004004e0 <main>:
  4004e0:	31 c0                	xor    %eax,%eax
  4004e2:	c3                   	retq   
  4004e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004ea:	00 00 00 
  4004ed:	0f 1f 00             	nopl   (%rax)

00000000004004f0 <_start>:
  4004f0:	31 ed                	xor    %ebp,%ebp
  4004f2:	49 89 d1             	mov    %rdx,%r9
  4004f5:	5e                   	pop    %rsi
  4004f6:	48 89 e2             	mov    %rsp,%rdx
  4004f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004fd:	50                   	push   %rax
  4004fe:	54                   	push   %rsp
  4004ff:	49 c7 c0 f0 1a 40 00 	mov    $0x401af0,%r8
  400506:	48 c7 c1 80 1a 40 00 	mov    $0x401a80,%rcx
  40050d:	48 c7 c7 e0 04 40 00 	mov    $0x4004e0,%rdi
  400514:	e8 97 ff ff ff       	callq  4004b0 <__libc_start_main@plt>
  400519:	f4                   	hlt    
  40051a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400520 <deregister_tm_clones>:
  400520:	b8 4f 30 60 00       	mov    $0x60304f,%eax
  400525:	55                   	push   %rbp
  400526:	48 2d 48 30 60 00    	sub    $0x603048,%rax
  40052c:	48 83 f8 0e          	cmp    $0xe,%rax
  400530:	48 89 e5             	mov    %rsp,%rbp
  400533:	76 1b                	jbe    400550 <deregister_tm_clones+0x30>
  400535:	b8 00 00 00 00       	mov    $0x0,%eax
  40053a:	48 85 c0             	test   %rax,%rax
  40053d:	74 11                	je     400550 <deregister_tm_clones+0x30>
  40053f:	5d                   	pop    %rbp
  400540:	bf 48 30 60 00       	mov    $0x603048,%edi
  400545:	ff e0                	jmpq   *%rax
  400547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40054e:	00 00 
  400550:	5d                   	pop    %rbp
  400551:	c3                   	retq   
  400552:	0f 1f 40 00          	nopl   0x0(%rax)
  400556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40055d:	00 00 00 

0000000000400560 <register_tm_clones>:
  400560:	be 48 30 60 00       	mov    $0x603048,%esi
  400565:	55                   	push   %rbp
  400566:	48 81 ee 48 30 60 00 	sub    $0x603048,%rsi
  40056d:	48 c1 fe 03          	sar    $0x3,%rsi
  400571:	48 89 e5             	mov    %rsp,%rbp
  400574:	48 89 f0             	mov    %rsi,%rax
  400577:	48 c1 e8 3f          	shr    $0x3f,%rax
  40057b:	48 01 c6             	add    %rax,%rsi
  40057e:	48 d1 fe             	sar    %rsi
  400581:	74 15                	je     400598 <register_tm_clones+0x38>
  400583:	b8 00 00 00 00       	mov    $0x0,%eax
  400588:	48 85 c0             	test   %rax,%rax
  40058b:	74 0b                	je     400598 <register_tm_clones+0x38>
  40058d:	5d                   	pop    %rbp
  40058e:	bf 48 30 60 00       	mov    $0x603048,%edi
  400593:	ff e0                	jmpq   *%rax
  400595:	0f 1f 00             	nopl   (%rax)
  400598:	5d                   	pop    %rbp
  400599:	c3                   	retq   
  40059a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005a0 <__do_global_dtors_aux>:
  4005a0:	80 3d a1 2a 20 00 00 	cmpb   $0x0,0x202aa1(%rip)        # 603048 <__TMC_END__>
  4005a7:	75 11                	jne    4005ba <__do_global_dtors_aux+0x1a>
  4005a9:	55                   	push   %rbp
  4005aa:	48 89 e5             	mov    %rsp,%rbp
  4005ad:	e8 6e ff ff ff       	callq  400520 <deregister_tm_clones>
  4005b2:	5d                   	pop    %rbp
  4005b3:	c6 05 8e 2a 20 00 01 	movb   $0x1,0x202a8e(%rip)        # 603048 <__TMC_END__>
  4005ba:	f3 c3                	repz retq 
  4005bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005c0 <frame_dummy>:
  4005c0:	bf 20 2e 60 00       	mov    $0x602e20,%edi
  4005c5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4005c9:	75 05                	jne    4005d0 <frame_dummy+0x10>
  4005cb:	eb 93                	jmp    400560 <register_tm_clones>
  4005cd:	0f 1f 00             	nopl   (%rax)
  4005d0:	b8 00 00 00 00       	mov    $0x0,%eax
  4005d5:	48 85 c0             	test   %rax,%rax
  4005d8:	74 f1                	je     4005cb <frame_dummy+0xb>
  4005da:	55                   	push   %rbp
  4005db:	48 89 e5             	mov    %rsp,%rbp
  4005de:	ff d0                	callq  *%rax
  4005e0:	5d                   	pop    %rbp
  4005e1:	e9 7a ff ff ff       	jmpq   400560 <register_tm_clones>
  4005e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005ed:	00 00 00 

00000000004005f0 <expire_items>:
  4005f0:	41 55                	push   %r13
  4005f2:	41 54                	push   %r12
  4005f4:	49 89 f5             	mov    %rsi,%r13
  4005f7:	55                   	push   %rbp
  4005f8:	53                   	push   %rbx
  4005f9:	49 89 fc             	mov    %rdi,%r12
  4005fc:	48 89 d5             	mov    %rdx,%rbp
  4005ff:	31 db                	xor    %ebx,%ebx
  400601:	48 83 ec 18          	sub    $0x18,%rsp
  400605:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40060c:	00 00 
  40060e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400613:	31 c0                	xor    %eax,%eax
  400615:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
  40061c:	ff 
  40061d:	eb 10                	jmp    40062f <expire_items+0x3f>
  40061f:	90                   	nop
  400620:	8b 74 24 04          	mov    0x4(%rsp),%esi
  400624:	4c 89 ef             	mov    %r13,%rdi
  400627:	83 c3 01             	add    $0x1,%ebx
  40062a:	e8 11 0d 00 00       	callq  401340 <dmap_erase>
  40062f:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
  400634:	48 89 ea             	mov    %rbp,%rdx
  400637:	4c 89 e7             	mov    %r12,%rdi
  40063a:	e8 f1 01 00 00       	callq  400830 <dchain_expire_one_index>
  40063f:	85 c0                	test   %eax,%eax
  400641:	75 dd                	jne    400620 <expire_items+0x30>
  400643:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  400648:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40064f:	00 00 
  400651:	89 d8                	mov    %ebx,%eax
  400653:	75 0b                	jne    400660 <expire_items+0x70>
  400655:	48 83 c4 18          	add    $0x18,%rsp
  400659:	5b                   	pop    %rbx
  40065a:	5d                   	pop    %rbp
  40065b:	41 5c                	pop    %r12
  40065d:	41 5d                	pop    %r13
  40065f:	c3                   	retq   
  400660:	e8 3b fe ff ff       	callq  4004a0 <__stack_chk_fail@plt>
  400665:	90                   	nop
  400666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40066d:	00 00 00 

0000000000400670 <expire_items_single_map>:
  400670:	41 56                	push   %r14
  400672:	41 55                	push   %r13
  400674:	49 89 d6             	mov    %rdx,%r14
  400677:	41 54                	push   %r12
  400679:	55                   	push   %rbp
  40067a:	49 89 fd             	mov    %rdi,%r13
  40067d:	53                   	push   %rbx
  40067e:	48 89 f5             	mov    %rsi,%rbp
  400681:	49 89 cc             	mov    %rcx,%r12
  400684:	31 db                	xor    %ebx,%ebx
  400686:	48 83 ec 20          	sub    $0x20,%rsp
  40068a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400691:	00 00 
  400693:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400698:	31 c0                	xor    %eax,%eax
  40069a:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
  4006a1:	ff 
  4006a2:	eb 3b                	jmp    4006df <expire_items_single_map+0x6f>
  4006a4:	0f 1f 40 00          	nopl   0x0(%rax)
  4006a8:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4006ac:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  4006b1:	48 89 ef             	mov    %rbp,%rdi
  4006b4:	83 c3 01             	add    $0x1,%ebx
  4006b7:	e8 a4 0e 00 00       	callq  401560 <vector_borrow_half>
  4006bc:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  4006c1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  4006c6:	4c 89 f7             	mov    %r14,%rdi
  4006c9:	e8 e2 10 00 00       	callq  4017b0 <map_erase>
  4006ce:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  4006d3:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4006d7:	48 89 ef             	mov    %rbp,%rdi
  4006da:	e8 91 0e 00 00       	callq  401570 <vector_return_full>
  4006df:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  4006e4:	4c 89 e2             	mov    %r12,%rdx
  4006e7:	4c 89 ef             	mov    %r13,%rdi
  4006ea:	e8 41 01 00 00       	callq  400830 <dchain_expire_one_index>
  4006ef:	85 c0                	test   %eax,%eax
  4006f1:	75 b5                	jne    4006a8 <expire_items_single_map+0x38>
  4006f3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4006f8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4006ff:	00 00 
  400701:	89 d8                	mov    %ebx,%eax
  400703:	75 0d                	jne    400712 <expire_items_single_map+0xa2>
  400705:	48 83 c4 20          	add    $0x20,%rsp
  400709:	5b                   	pop    %rbx
  40070a:	5d                   	pop    %rbp
  40070b:	41 5c                	pop    %r12
  40070d:	41 5d                	pop    %r13
  40070f:	41 5e                	pop    %r14
  400711:	c3                   	retq   
  400712:	e8 89 fd ff ff       	callq  4004a0 <__stack_chk_fail@plt>
  400717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40071e:	00 00 

0000000000400720 <dchain_allocate>:
  400720:	41 57                	push   %r15
  400722:	41 56                	push   %r14
  400724:	41 55                	push   %r13
  400726:	41 54                	push   %r12
  400728:	41 89 fd             	mov    %edi,%r13d
  40072b:	55                   	push   %rbp
  40072c:	53                   	push   %rbx
  40072d:	bf 10 00 00 00       	mov    $0x10,%edi
  400732:	48 89 f5             	mov    %rsi,%rbp
  400735:	45 31 e4             	xor    %r12d,%r12d
  400738:	48 83 ec 18          	sub    $0x18,%rsp
  40073c:	48 8b 06             	mov    (%rsi),%rax
  40073f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400744:	e8 77 fd ff ff       	callq  4004c0 <malloc@plt>
  400749:	48 85 c0             	test   %rax,%rax
  40074c:	74 48                	je     400796 <dchain_allocate+0x76>
  40074e:	41 8d 5d 02          	lea    0x2(%r13),%ebx
  400752:	48 89 45 00          	mov    %rax,0x0(%rbp)
  400756:	49 89 c7             	mov    %rax,%r15
  400759:	48 63 db             	movslq %ebx,%rbx
  40075c:	48 c1 e3 03          	shl    $0x3,%rbx
  400760:	48 89 df             	mov    %rbx,%rdi
  400763:	e8 58 fd ff ff       	callq  4004c0 <malloc@plt>
  400768:	48 85 c0             	test   %rax,%rax
  40076b:	49 89 c6             	mov    %rax,%r14
  40076e:	74 48                	je     4007b8 <dchain_allocate+0x98>
  400770:	48 8d 7b f0          	lea    -0x10(%rbx),%rdi
  400774:	49 89 07             	mov    %rax,(%r15)
  400777:	e8 44 fd ff ff       	callq  4004c0 <malloc@plt>
  40077c:	48 85 c0             	test   %rax,%rax
  40077f:	74 2f                	je     4007b0 <dchain_allocate+0x90>
  400781:	49 89 47 08          	mov    %rax,0x8(%r15)
  400785:	44 89 ee             	mov    %r13d,%esi
  400788:	4c 89 f7             	mov    %r14,%rdi
  40078b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  400791:	e8 ea 00 00 00       	callq  400880 <dchain_impl_init>
  400796:	48 83 c4 18          	add    $0x18,%rsp
  40079a:	44 89 e0             	mov    %r12d,%eax
  40079d:	5b                   	pop    %rbx
  40079e:	5d                   	pop    %rbp
  40079f:	41 5c                	pop    %r12
  4007a1:	41 5d                	pop    %r13
  4007a3:	41 5e                	pop    %r14
  4007a5:	41 5f                	pop    %r15
  4007a7:	c3                   	retq   
  4007a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4007af:	00 
  4007b0:	4c 89 f7             	mov    %r14,%rdi
  4007b3:	e8 d8 fc ff ff       	callq  400490 <free@plt>
  4007b8:	4c 89 ff             	mov    %r15,%rdi
  4007bb:	e8 d0 fc ff ff       	callq  400490 <free@plt>
  4007c0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4007c5:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4007c9:	eb cb                	jmp    400796 <dchain_allocate+0x76>
  4007cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004007d0 <dchain_allocate_new_index>:
  4007d0:	41 54                	push   %r12
  4007d2:	55                   	push   %rbp
  4007d3:	49 89 d4             	mov    %rdx,%r12
  4007d6:	53                   	push   %rbx
  4007d7:	48 89 fb             	mov    %rdi,%rbx
  4007da:	48 8b 3f             	mov    (%rdi),%rdi
  4007dd:	48 89 f5             	mov    %rsi,%rbp
  4007e0:	e8 fb 00 00 00       	callq  4008e0 <dchain_impl_allocate_new_index>
  4007e5:	85 c0                	test   %eax,%eax
  4007e7:	74 0c                	je     4007f5 <dchain_allocate_new_index+0x25>
  4007e9:	48 63 4d 00          	movslq 0x0(%rbp),%rcx
  4007ed:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  4007f1:	4c 89 24 ca          	mov    %r12,(%rdx,%rcx,8)
  4007f5:	5b                   	pop    %rbx
  4007f6:	5d                   	pop    %rbp
  4007f7:	41 5c                	pop    %r12
  4007f9:	c3                   	retq   
  4007fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400800 <dchain_rejuvenate_index>:
  400800:	41 54                	push   %r12
  400802:	55                   	push   %rbp
  400803:	48 89 fd             	mov    %rdi,%rbp
  400806:	53                   	push   %rbx
  400807:	48 8b 3f             	mov    (%rdi),%rdi
  40080a:	48 63 de             	movslq %esi,%rbx
  40080d:	89 de                	mov    %ebx,%esi
  40080f:	49 89 d4             	mov    %rdx,%r12
  400812:	e8 79 01 00 00       	callq  400990 <dchain_impl_rejuvenate_index>
  400817:	85 c0                	test   %eax,%eax
  400819:	74 08                	je     400823 <dchain_rejuvenate_index+0x23>
  40081b:	48 8b 55 08          	mov    0x8(%rbp),%rdx
  40081f:	4c 89 24 da          	mov    %r12,(%rdx,%rbx,8)
  400823:	5b                   	pop    %rbx
  400824:	5d                   	pop    %rbp
  400825:	41 5c                	pop    %r12
  400827:	c3                   	retq   
  400828:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40082f:	00 

0000000000400830 <dchain_expire_one_index>:
  400830:	41 54                	push   %r12
  400832:	55                   	push   %rbp
  400833:	49 89 d4             	mov    %rdx,%r12
  400836:	53                   	push   %rbx
  400837:	48 89 fb             	mov    %rdi,%rbx
  40083a:	48 8b 3f             	mov    (%rdi),%rdi
  40083d:	48 89 f5             	mov    %rsi,%rbp
  400840:	e8 2b 01 00 00       	callq  400970 <dchain_impl_get_oldest_index>
  400845:	85 c0                	test   %eax,%eax
  400847:	74 11                	je     40085a <dchain_expire_one_index+0x2a>
  400849:	48 63 55 00          	movslq 0x0(%rbp),%rdx
  40084d:	48 8b 43 08          	mov    0x8(%rbx),%rax
  400851:	4c 39 24 d0          	cmp    %r12,(%rax,%rdx,8)
  400855:	48 89 d6             	mov    %rdx,%rsi
  400858:	7c 0e                	jl     400868 <dchain_expire_one_index+0x38>
  40085a:	5b                   	pop    %rbx
  40085b:	31 c0                	xor    %eax,%eax
  40085d:	5d                   	pop    %rbp
  40085e:	41 5c                	pop    %r12
  400860:	c3                   	retq   
  400861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400868:	48 8b 3b             	mov    (%rbx),%rdi
  40086b:	5b                   	pop    %rbx
  40086c:	5d                   	pop    %rbp
  40086d:	41 5c                	pop    %r12
  40086f:	e9 bc 00 00 00       	jmpq   400930 <dchain_impl_free_index>
  400874:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40087b:	00 00 00 
  40087e:	66 90                	xchg   %ax,%ax

0000000000400880 <dchain_impl_init>:
  400880:	83 fe 01             	cmp    $0x1,%esi
  400883:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  400889:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  400890:	c7 47 0c 02 00 00 00 	movl   $0x2,0xc(%rdi)
  400897:	c7 47 08 02 00 00 00 	movl   $0x2,0x8(%rdi)
  40089e:	7e 38                	jle    4008d8 <dchain_impl_init+0x58>
  4008a0:	48 8d 57 14          	lea    0x14(%rdi),%rdx
  4008a4:	83 c6 01             	add    $0x1,%esi
  4008a7:	b8 02 00 00 00       	mov    $0x2,%eax
  4008ac:	0f 1f 40 00          	nopl   0x0(%rax)
  4008b0:	83 c0 01             	add    $0x1,%eax
  4008b3:	48 83 c2 08          	add    $0x8,%rdx
  4008b7:	89 42 f8             	mov    %eax,-0x8(%rdx)
  4008ba:	89 42 f4             	mov    %eax,-0xc(%rdx)
  4008bd:	39 f0                	cmp    %esi,%eax
  4008bf:	75 ef                	jne    4008b0 <dchain_impl_init+0x30>
  4008c1:	48 98                	cltq   
  4008c3:	48 c1 e0 03          	shl    $0x3,%rax
  4008c7:	48 01 c7             	add    %rax,%rdi
  4008ca:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%rdi)
  4008d1:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
  4008d7:	c3                   	retq   
  4008d8:	b8 10 00 00 00       	mov    $0x10,%eax
  4008dd:	eb e8                	jmp    4008c7 <dchain_impl_init+0x47>
  4008df:	90                   	nop

00000000004008e0 <dchain_impl_allocate_new_index>:
  4008e0:	8b 47 0c             	mov    0xc(%rdi),%eax
  4008e3:	83 f8 01             	cmp    $0x1,%eax
  4008e6:	74 38                	je     400920 <dchain_impl_allocate_new_index+0x40>
  4008e8:	48 63 d0             	movslq %eax,%rdx
  4008eb:	48 8d 14 d7          	lea    (%rdi,%rdx,8),%rdx
  4008ef:	8b 4a 04             	mov    0x4(%rdx),%ecx
  4008f2:	89 4f 0c             	mov    %ecx,0xc(%rdi)
  4008f5:	89 4f 08             	mov    %ecx,0x8(%rdi)
  4008f8:	8b 0f                	mov    (%rdi),%ecx
  4008fa:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  400901:	89 0a                	mov    %ecx,(%rdx)
  400903:	48 63 17             	movslq (%rdi),%rdx
  400906:	89 44 d7 04          	mov    %eax,0x4(%rdi,%rdx,8)
  40090a:	89 07                	mov    %eax,(%rdi)
  40090c:	83 e8 02             	sub    $0x2,%eax
  40090f:	89 06                	mov    %eax,(%rsi)
  400911:	b8 01 00 00 00       	mov    $0x1,%eax
  400916:	c3                   	retq   
  400917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40091e:	00 00 
  400920:	31 c0                	xor    %eax,%eax
  400922:	c3                   	retq   
  400923:	0f 1f 00             	nopl   (%rax)
  400926:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40092d:	00 00 00 

0000000000400930 <dchain_impl_free_index>:
  400930:	83 c6 02             	add    $0x2,%esi
  400933:	48 63 c6             	movslq %esi,%rax
  400936:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
  40093a:	44 8b 01             	mov    (%rcx),%r8d
  40093d:	48 63 51 04          	movslq 0x4(%rcx),%rdx
  400941:	45 85 c0             	test   %r8d,%r8d
  400944:	74 0a                	je     400950 <dchain_impl_free_index+0x20>
  400946:	31 c0                	xor    %eax,%eax
  400948:	41 39 d0             	cmp    %edx,%r8d
  40094b:	75 03                	jne    400950 <dchain_impl_free_index+0x20>
  40094d:	f3 c3                	repz retq 
  40094f:	90                   	nop
  400950:	49 63 c0             	movslq %r8d,%rax
  400953:	89 54 c7 04          	mov    %edx,0x4(%rdi,%rax,8)
  400957:	8b 47 0c             	mov    0xc(%rdi),%eax
  40095a:	44 89 04 d7          	mov    %r8d,(%rdi,%rdx,8)
  40095e:	89 41 04             	mov    %eax,0x4(%rcx)
  400961:	89 01                	mov    %eax,(%rcx)
  400963:	b8 01 00 00 00       	mov    $0x1,%eax
  400968:	89 77 0c             	mov    %esi,0xc(%rdi)
  40096b:	89 77 08             	mov    %esi,0x8(%rdi)
  40096e:	c3                   	retq   
  40096f:	90                   	nop

0000000000400970 <dchain_impl_get_oldest_index>:
  400970:	8b 57 04             	mov    0x4(%rdi),%edx
  400973:	39 17                	cmp    %edx,(%rdi)
  400975:	75 09                	jne    400980 <dchain_impl_get_oldest_index+0x10>
  400977:	31 c0                	xor    %eax,%eax
  400979:	85 d2                	test   %edx,%edx
  40097b:	75 03                	jne    400980 <dchain_impl_get_oldest_index+0x10>
  40097d:	f3 c3                	repz retq 
  40097f:	90                   	nop
  400980:	83 ea 02             	sub    $0x2,%edx
  400983:	b8 01 00 00 00       	mov    $0x1,%eax
  400988:	89 16                	mov    %edx,(%rsi)
  40098a:	c3                   	retq   
  40098b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400990 <dchain_impl_rejuvenate_index>:
  400990:	83 c6 02             	add    $0x2,%esi
  400993:	48 63 c6             	movslq %esi,%rax
  400996:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
  40099a:	48 63 42 04          	movslq 0x4(%rdx),%rax
  40099e:	8b 0a                	mov    (%rdx),%ecx
  4009a0:	39 c8                	cmp    %ecx,%eax
  4009a2:	74 2c                	je     4009d0 <dchain_impl_rejuvenate_index+0x40>
  4009a4:	4c 63 c1             	movslq %ecx,%r8
  4009a7:	42 89 44 c7 04       	mov    %eax,0x4(%rdi,%r8,8)
  4009ac:	89 0c c7             	mov    %ecx,(%rdi,%rax,8)
  4009af:	48 63 07             	movslq (%rdi),%rax
  4009b2:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  4009b9:	89 02                	mov    %eax,(%rdx)
  4009bb:	89 74 c7 04          	mov    %esi,0x4(%rdi,%rax,8)
  4009bf:	b8 01 00 00 00       	mov    $0x1,%eax
  4009c4:	89 37                	mov    %esi,(%rdi)
  4009c6:	c3                   	retq   
  4009c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4009ce:	00 00 
  4009d0:	85 c0                	test   %eax,%eax
  4009d2:	0f 94 c0             	sete   %al
  4009d5:	0f b6 c0             	movzbl %al,%eax
  4009d8:	c3                   	retq   
  4009d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004009e0 <map_impl_init>:
  4009e0:	8b 54 24 08          	mov    0x8(%rsp),%edx
  4009e4:	31 c0                	xor    %eax,%eax
  4009e6:	85 d2                	test   %edx,%edx
  4009e8:	7e 1d                	jle    400a07 <map_impl_init+0x27>
  4009ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4009f0:	c7 04 87 00 00 00 00 	movl   $0x0,(%rdi,%rax,4)
  4009f7:	41 c7 04 80 00 00 00 	movl   $0x0,(%r8,%rax,4)
  4009fe:	00 
  4009ff:	48 83 c0 01          	add    $0x1,%rax
  400a03:	39 c2                	cmp    %eax,%edx
  400a05:	7f e9                	jg     4009f0 <map_impl_init+0x10>
  400a07:	f3 c3                	repz retq 
  400a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400a10 <map_impl_get>:
  400a10:	41 57                	push   %r15
  400a12:	41 56                	push   %r14
  400a14:	41 55                	push   %r13
  400a16:	41 54                	push   %r12
  400a18:	55                   	push   %rbp
  400a19:	53                   	push   %rbx
  400a1a:	48 83 ec 38          	sub    $0x38,%rsp
  400a1e:	44 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13d
  400a25:	00 
  400a26:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
  400a2b:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  400a30:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
  400a35:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
  400a3a:	45 8d 65 ff          	lea    -0x1(%r13),%r12d
  400a3e:	44 89 dd             	mov    %r11d,%ebp
  400a41:	44 21 e5             	and    %r12d,%ebp
  400a44:	44 01 ed             	add    %r13d,%ebp
  400a47:	44 21 e5             	and    %r12d,%ebp
  400a4a:	45 85 ed             	test   %r13d,%r13d
  400a4d:	45 8d 7c 2d 00       	lea    0x0(%r13,%rbp,1),%r15d
  400a52:	0f 8e c0 00 00 00    	jle    400b18 <map_impl_get+0x108>
  400a58:	45 89 e8             	mov    %r13d,%r8d
  400a5b:	49 89 fe             	mov    %rdi,%r14
  400a5e:	45 89 fd             	mov    %r15d,%r13d
  400a61:	49 89 d7             	mov    %rdx,%r15
  400a64:	eb 21                	jmp    400a87 <map_impl_get+0x77>
  400a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a6d:	00 00 00 
  400a70:	8b 04 81             	mov    (%rcx,%rax,4),%eax
  400a73:	85 c0                	test   %eax,%eax
  400a75:	0f 84 9d 00 00 00    	je     400b18 <map_impl_get+0x108>
  400a7b:	83 c5 01             	add    $0x1,%ebp
  400a7e:	41 39 ed             	cmp    %ebp,%r13d
  400a81:	0f 84 91 00 00 00    	je     400b18 <map_impl_get+0x108>
  400a87:	89 eb                	mov    %ebp,%ebx
  400a89:	44 21 e3             	and    %r12d,%ebx
  400a8c:	44 01 c3             	add    %r8d,%ebx
  400a8f:	44 21 e3             	and    %r12d,%ebx
  400a92:	48 63 c3             	movslq %ebx,%rax
  400a95:	41 8b 14 86          	mov    (%r14,%rax,4),%edx
  400a99:	4c 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%r9
  400aa0:	00 
  400aa1:	4c 89 0c 24          	mov    %r9,(%rsp)
  400aa5:	85 d2                	test   %edx,%edx
  400aa7:	74 c7                	je     400a70 <map_impl_get+0x60>
  400aa9:	45 39 1c 87          	cmp    %r11d,(%r15,%rax,4)
  400aad:	75 c1                	jne    400a70 <map_impl_get+0x60>
  400aaf:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  400ab4:	44 89 44 24 14       	mov    %r8d,0x14(%rsp)
  400ab9:	44 89 5c 24 10       	mov    %r11d,0x10(%rsp)
  400abe:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  400ac3:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
  400ac8:	48 8b 3c c2          	mov    (%rdx,%rax,8),%rdi
  400acc:	ff 54 24 70          	callq  *0x70(%rsp)
  400ad0:	84 c0                	test   %al,%al
  400ad2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  400ad7:	44 8b 5c 24 10       	mov    0x10(%rsp),%r11d
  400adc:	44 8b 44 24 14       	mov    0x14(%rsp),%r8d
  400ae1:	4c 8b 0c 24          	mov    (%rsp),%r9
  400ae5:	74 94                	je     400a7b <map_impl_get+0x6b>
  400ae7:	83 fb ff             	cmp    $0xffffffff,%ebx
  400aea:	74 2c                	je     400b18 <map_impl_get+0x108>
  400aec:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  400af1:	42 8b 14 08          	mov    (%rax,%r9,1),%edx
  400af5:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
  400afc:	00 
  400afd:	89 10                	mov    %edx,(%rax)
  400aff:	48 83 c4 38          	add    $0x38,%rsp
  400b03:	b8 01 00 00 00       	mov    $0x1,%eax
  400b08:	5b                   	pop    %rbx
  400b09:	5d                   	pop    %rbp
  400b0a:	41 5c                	pop    %r12
  400b0c:	41 5d                	pop    %r13
  400b0e:	41 5e                	pop    %r14
  400b10:	41 5f                	pop    %r15
  400b12:	c3                   	retq   
  400b13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400b18:	48 83 c4 38          	add    $0x38,%rsp
  400b1c:	31 c0                	xor    %eax,%eax
  400b1e:	5b                   	pop    %rbx
  400b1f:	5d                   	pop    %rbp
  400b20:	41 5c                	pop    %r12
  400b22:	41 5d                	pop    %r13
  400b24:	41 5e                	pop    %r14
  400b26:	41 5f                	pop    %r15
  400b28:	c3                   	retq   
  400b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400b30 <map_impl_put>:
  400b30:	41 56                	push   %r14
  400b32:	41 55                	push   %r13
  400b34:	41 54                	push   %r12
  400b36:	55                   	push   %rbp
  400b37:	53                   	push   %rbx
  400b38:	44 8b 64 24 40       	mov    0x40(%rsp),%r12d
  400b3d:	8b 6c 24 30          	mov    0x30(%rsp),%ebp
  400b41:	45 8d 5c 24 ff       	lea    -0x1(%r12),%r11d
  400b46:	89 eb                	mov    %ebp,%ebx
  400b48:	44 21 db             	and    %r11d,%ebx
  400b4b:	44 01 e3             	add    %r12d,%ebx
  400b4e:	44 21 db             	and    %r11d,%ebx
  400b51:	45 85 e4             	test   %r12d,%r12d
  400b54:	7e 58                	jle    400bae <map_impl_put+0x7e>
  400b56:	44 89 d8             	mov    %r11d,%eax
  400b59:	44 8d 53 01          	lea    0x1(%rbx),%r10d
  400b5d:	21 d8                	and    %ebx,%eax
  400b5f:	44 01 e3             	add    %r12d,%ebx
  400b62:	44 01 e0             	add    %r12d,%eax
  400b65:	44 21 d8             	and    %r11d,%eax
  400b68:	48 98                	cltq   
  400b6a:	4c 8d 2c 85 00 00 00 	lea    0x0(,%rax,4),%r13
  400b71:	00 
  400b72:	4e 8d 34 2f          	lea    (%rdi,%r13,1),%r14
  400b76:	41 83 3e 00          	cmpl   $0x0,(%r14)
  400b7a:	75 28                	jne    400ba4 <map_impl_put+0x74>
  400b7c:	eb 62                	jmp    400be0 <map_impl_put+0xb0>
  400b7e:	66 90                	xchg   %ax,%ax
  400b80:	44 89 d0             	mov    %r10d,%eax
  400b83:	41 83 c2 01          	add    $0x1,%r10d
  400b87:	44 21 d8             	and    %r11d,%eax
  400b8a:	44 01 e0             	add    %r12d,%eax
  400b8d:	44 21 d8             	and    %r11d,%eax
  400b90:	48 98                	cltq   
  400b92:	4c 8d 2c 85 00 00 00 	lea    0x0(,%rax,4),%r13
  400b99:	00 
  400b9a:	4e 8d 34 2f          	lea    (%rdi,%r13,1),%r14
  400b9e:	41 83 3e 00          	cmpl   $0x0,(%r14)
  400ba2:	74 3c                	je     400be0 <map_impl_put+0xb0>
  400ba4:	42 83 04 29 01       	addl   $0x1,(%rcx,%r13,1)
  400ba9:	44 39 d3             	cmp    %r10d,%ebx
  400bac:	75 d2                	jne    400b80 <map_impl_put+0x50>
  400bae:	4c 8d 77 fc          	lea    -0x4(%rdi),%r14
  400bb2:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
  400bb9:	49 c7 c5 fc ff ff ff 	mov    $0xfffffffffffffffc,%r13
  400bc0:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
  400bc7:	4c 89 0c 06          	mov    %r9,(%rsi,%rax,1)
  400bcb:	8b 44 24 38          	mov    0x38(%rsp),%eax
  400bcf:	42 89 2c 2a          	mov    %ebp,(%rdx,%r13,1)
  400bd3:	5b                   	pop    %rbx
  400bd4:	5d                   	pop    %rbp
  400bd5:	43 89 04 28          	mov    %eax,(%r8,%r13,1)
  400bd9:	41 5c                	pop    %r12
  400bdb:	41 5d                	pop    %r13
  400bdd:	41 5e                	pop    %r14
  400bdf:	c3                   	retq   
  400be0:	48 c1 e0 03          	shl    $0x3,%rax
  400be4:	eb da                	jmp    400bc0 <map_impl_put+0x90>
  400be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400bed:	00 00 00 

0000000000400bf0 <map_impl_erase>:
  400bf0:	41 57                	push   %r15
  400bf2:	41 56                	push   %r14
  400bf4:	41 55                	push   %r13
  400bf6:	41 54                	push   %r12
  400bf8:	55                   	push   %rbp
  400bf9:	53                   	push   %rbx
  400bfa:	48 83 ec 48          	sub    $0x48,%rsp
  400bfe:	44 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15d
  400c05:	00 
  400c06:	4c 89 44 24 30       	mov    %r8,0x30(%rsp)
  400c0b:	44 8b 84 24 80 00 00 	mov    0x80(%rsp),%r8d
  400c12:	00 
  400c13:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
  400c18:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
  400c1d:	45 8d 6f ff          	lea    -0x1(%r15),%r13d
  400c21:	44 89 c5             	mov    %r8d,%ebp
  400c24:	44 21 ed             	and    %r13d,%ebp
  400c27:	44 01 fd             	add    %r15d,%ebp
  400c2a:	44 21 ed             	and    %r13d,%ebp
  400c2d:	45 85 ff             	test   %r15d,%r15d
  400c30:	45 8d 0c 2f          	lea    (%r15,%rbp,1),%r9d
  400c34:	0f 8e c4 00 00 00    	jle    400cfe <map_impl_erase+0x10e>
  400c3a:	49 89 ff             	mov    %rdi,%r15
  400c3d:	44 8b 94 24 88 00 00 	mov    0x88(%rsp),%r10d
  400c44:	00 
  400c45:	eb 1c                	jmp    400c63 <map_impl_erase+0x73>
  400c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400c4e:	00 00 
  400c50:	83 c5 01             	add    $0x1,%ebp
  400c53:	41 83 ec 01          	sub    $0x1,%r12d
  400c57:	41 39 e9             	cmp    %ebp,%r9d
  400c5a:	44 89 23             	mov    %r12d,(%rbx)
  400c5d:	0f 84 9b 00 00 00    	je     400cfe <map_impl_erase+0x10e>
  400c63:	89 e8                	mov    %ebp,%eax
  400c65:	44 21 e8             	and    %r13d,%eax
  400c68:	44 01 d0             	add    %r10d,%eax
  400c6b:	44 21 e8             	and    %r13d,%eax
  400c6e:	48 98                	cltq   
  400c70:	48 8d 1c 85 00 00 00 	lea    0x0(,%rax,4),%rbx
  400c77:	00 
  400c78:	4d 8d 34 1f          	lea    (%r15,%rbx,1),%r14
  400c7c:	48 01 cb             	add    %rcx,%rbx
  400c7f:	44 39 04 82          	cmp    %r8d,(%rdx,%rax,4)
  400c83:	44 8b 23             	mov    (%rbx),%r12d
  400c86:	75 c8                	jne    400c50 <map_impl_erase+0x60>
  400c88:	41 8b 36             	mov    (%r14),%esi
  400c8b:	85 f6                	test   %esi,%esi
  400c8d:	74 c1                	je     400c50 <map_impl_erase+0x60>
  400c8f:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  400c94:	44 89 54 24 24       	mov    %r10d,0x24(%rsp)
  400c99:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  400c9e:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
  400ca3:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
  400ca8:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
  400cad:	4c 8d 1c c6          	lea    (%rsi,%rax,8),%r11
  400cb1:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  400cb6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  400cbb:	49 8b 3b             	mov    (%r11),%rdi
  400cbe:	4c 89 1c 24          	mov    %r11,(%rsp)
  400cc2:	ff d0                	callq  *%rax
  400cc4:	84 c0                	test   %al,%al
  400cc6:	4c 8b 1c 24          	mov    (%rsp),%r11
  400cca:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
  400ccf:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  400cd4:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  400cd9:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  400cde:	44 8b 54 24 24       	mov    0x24(%rsp),%r10d
  400ce3:	0f 84 67 ff ff ff    	je     400c50 <map_impl_erase+0x60>
  400ce9:	49 8b 13             	mov    (%r11),%rdx
  400cec:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
  400cf3:	00 
  400cf4:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
  400cfb:	48 89 10             	mov    %rdx,(%rax)
  400cfe:	48 83 c4 48          	add    $0x48,%rsp
  400d02:	5b                   	pop    %rbx
  400d03:	5d                   	pop    %rbp
  400d04:	41 5c                	pop    %r12
  400d06:	41 5d                	pop    %r13
  400d08:	41 5e                	pop    %r14
  400d0a:	41 5f                	pop    %r15
  400d0c:	c3                   	retq   
  400d0d:	0f 1f 00             	nopl   (%rax)

0000000000400d10 <map_impl_size>:
  400d10:	85 f6                	test   %esi,%esi
  400d12:	7e 1d                	jle    400d31 <map_impl_size+0x21>
  400d14:	8d 46 ff             	lea    -0x1(%rsi),%eax
  400d17:	48 8d 54 87 04       	lea    0x4(%rdi,%rax,4),%rdx
  400d1c:	31 c0                	xor    %eax,%eax
  400d1e:	66 90                	xchg   %ax,%ax
  400d20:	83 3f 01             	cmpl   $0x1,(%rdi)
  400d23:	83 d8 ff             	sbb    $0xffffffff,%eax
  400d26:	48 83 c7 04          	add    $0x4,%rdi
  400d2a:	48 39 d7             	cmp    %rdx,%rdi
  400d2d:	75 f1                	jne    400d20 <map_impl_size+0x10>
  400d2f:	f3 c3                	repz retq 
  400d31:	31 c0                	xor    %eax,%eax
  400d33:	c3                   	retq   
  400d34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d3b:	00 00 00 
  400d3e:	66 90                	xchg   %ax,%ax

0000000000400d40 <dmap_allocate>:
  400d40:	41 57                	push   %r15
  400d42:	41 56                	push   %r14
  400d44:	45 89 c6             	mov    %r8d,%r14d
  400d47:	41 55                	push   %r13
  400d49:	41 54                	push   %r12
  400d4b:	45 31 ed             	xor    %r13d,%r13d
  400d4e:	55                   	push   %rbp
  400d4f:	53                   	push   %rbx
  400d50:	48 83 ec 78          	sub    $0x78,%rsp
  400d54:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
  400d5b:	00 
  400d5c:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
  400d61:	bf b0 00 00 00       	mov    $0xb0,%edi
  400d66:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
  400d6b:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  400d70:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  400d75:	44 89 44 24 54       	mov    %r8d,0x54(%rsp)
  400d7a:	48 8b 00             	mov    (%rax),%rax
  400d7d:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
  400d82:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400d87:	e8 34 f7 ff ff       	callq  4004c0 <malloc@plt>
  400d8c:	48 85 c0             	test   %rax,%rax
  400d8f:	0f 84 54 02 00 00    	je     400fe9 <dmap_allocate+0x2a9>
  400d95:	8b bc 24 c8 00 00 00 	mov    0xc8(%rsp),%edi
  400d9c:	48 89 c3             	mov    %rax,%rbx
  400d9f:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
  400da6:	00 
  400da7:	41 0f af fe          	imul   %r14d,%edi
  400dab:	48 89 18             	mov    %rbx,(%rax)
  400dae:	48 63 ff             	movslq %edi,%rdi
  400db1:	e8 0a f7 ff ff       	callq  4004c0 <malloc@plt>
  400db6:	48 85 c0             	test   %rax,%rax
  400db9:	49 89 c4             	mov    %rax,%r12
  400dbc:	0f 84 58 02 00 00    	je     40101a <dmap_allocate+0x2da>
  400dc2:	4c 63 bc 24 d0 00 00 	movslq 0xd0(%rsp),%r15
  400dc9:	00 
  400dca:	48 89 43 18          	mov    %rax,0x18(%rbx)
  400dce:	4a 8d 2c bd 00 00 00 	lea    0x0(,%r15,4),%rbp
  400dd5:	00 
  400dd6:	48 89 ef             	mov    %rbp,%rdi
  400dd9:	e8 e2 f6 ff ff       	callq  4004c0 <malloc@plt>
  400dde:	48 85 c0             	test   %rax,%rax
  400de1:	49 89 c6             	mov    %rax,%r14
  400de4:	0f 84 28 02 00 00    	je     401012 <dmap_allocate+0x2d2>
  400dea:	49 c1 e7 03          	shl    $0x3,%r15
  400dee:	48 89 43 20          	mov    %rax,0x20(%rbx)
  400df2:	4c 89 ff             	mov    %r15,%rdi
  400df5:	e8 c6 f6 ff ff       	callq  4004c0 <malloc@plt>
  400dfa:	48 85 c0             	test   %rax,%rax
  400dfd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400e02:	0f 84 02 02 00 00    	je     40100a <dmap_allocate+0x2ca>
  400e08:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  400e0d:	48 89 ef             	mov    %rbp,%rdi
  400e10:	48 89 43 28          	mov    %rax,0x28(%rbx)
  400e14:	e8 a7 f6 ff ff       	callq  4004c0 <malloc@plt>
  400e19:	48 85 c0             	test   %rax,%rax
  400e1c:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  400e21:	0f 84 d9 01 00 00    	je     401000 <dmap_allocate+0x2c0>
  400e27:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  400e2c:	48 89 ef             	mov    %rbp,%rdi
  400e2f:	48 89 43 30          	mov    %rax,0x30(%rbx)
  400e33:	e8 88 f6 ff ff       	callq  4004c0 <malloc@plt>
  400e38:	48 85 c0             	test   %rax,%rax
  400e3b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  400e40:	0f 84 10 02 00 00    	je     401056 <dmap_allocate+0x316>
  400e46:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  400e4b:	48 89 ef             	mov    %rbp,%rdi
  400e4e:	48 89 43 38          	mov    %rax,0x38(%rbx)
  400e52:	e8 69 f6 ff ff       	callq  4004c0 <malloc@plt>
  400e57:	48 85 c0             	test   %rax,%rax
  400e5a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  400e5f:	0f 84 e7 01 00 00    	je     40104c <dmap_allocate+0x30c>
  400e65:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  400e6a:	48 89 ef             	mov    %rbp,%rdi
  400e6d:	48 89 43 40          	mov    %rax,0x40(%rbx)
  400e71:	e8 4a f6 ff ff       	callq  4004c0 <malloc@plt>
  400e76:	48 85 c0             	test   %rax,%rax
  400e79:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
  400e7e:	0f 84 0e 02 00 00    	je     401092 <dmap_allocate+0x352>
  400e84:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  400e89:	4c 89 ff             	mov    %r15,%rdi
  400e8c:	48 89 43 58          	mov    %rax,0x58(%rbx)
  400e90:	e8 2b f6 ff ff       	callq  4004c0 <malloc@plt>
  400e95:	48 85 c0             	test   %rax,%rax
  400e98:	49 89 c7             	mov    %rax,%r15
  400e9b:	0f 84 97 01 00 00    	je     401038 <dmap_allocate+0x2f8>
  400ea1:	48 89 43 60          	mov    %rax,0x60(%rbx)
  400ea5:	48 89 ef             	mov    %rbp,%rdi
  400ea8:	e8 13 f6 ff ff       	callq  4004c0 <malloc@plt>
  400ead:	48 85 c0             	test   %rax,%rax
  400eb0:	49 89 c5             	mov    %rax,%r13
  400eb3:	0f 84 c7 01 00 00    	je     401080 <dmap_allocate+0x340>
  400eb9:	48 89 43 68          	mov    %rax,0x68(%rbx)
  400ebd:	48 89 ef             	mov    %rbp,%rdi
  400ec0:	e8 fb f5 ff ff       	callq  4004c0 <malloc@plt>
  400ec5:	48 85 c0             	test   %rax,%rax
  400ec8:	0f 84 2a 02 00 00    	je     4010f8 <dmap_allocate+0x3b8>
  400ece:	48 89 43 78          	mov    %rax,0x78(%rbx)
  400ed2:	48 89 ef             	mov    %rbp,%rdi
  400ed5:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  400eda:	e8 e1 f5 ff ff       	callq  4004c0 <malloc@plt>
  400edf:	48 85 c0             	test   %rax,%rax
  400ee2:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
  400ee7:	0f 84 03 02 00 00    	je     4010f0 <dmap_allocate+0x3b0>
  400eed:	48 89 43 70          	mov    %rax,0x70(%rbx)
  400ef1:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  400ef6:	48 83 ec 08          	sub    $0x8,%rsp
  400efa:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  400eff:	4c 89 f7             	mov    %r14,%rdi
  400f02:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  400f08:	48 89 43 50          	mov    %rax,0x50(%rbx)
  400f0c:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
  400f11:	48 89 73 48          	mov    %rsi,0x48(%rbx)
  400f15:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
  400f1c:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
  400f21:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
  400f28:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  400f2c:	89 03                	mov    %eax,(%rbx)
  400f2e:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
  400f33:	48 89 43 08          	mov    %rax,0x8(%rbx)
  400f37:	48 8b 84 24 b8 00 00 	mov    0xb8(%rsp),%rax
  400f3e:	00 
  400f3f:	48 89 43 10          	mov    %rax,0x10(%rbx)
  400f43:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
  400f4a:	00 
  400f4b:	48 89 83 90 00 00 00 	mov    %rax,0x90(%rbx)
  400f52:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
  400f59:	00 
  400f5a:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
  400f61:	8b 84 24 d0 00 00 00 	mov    0xd0(%rsp),%eax
  400f68:	89 83 a4 00 00 00    	mov    %eax,0xa4(%rbx)
  400f6e:	8b 84 24 d8 00 00 00 	mov    0xd8(%rsp),%eax
  400f75:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
  400f7b:	8b 84 24 d8 00 00 00 	mov    0xd8(%rsp),%eax
  400f82:	50                   	push   %rax
  400f83:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
  400f88:	4c 8b 44 24 30       	mov    0x30(%rsp),%r8
  400f8d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  400f92:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  400f97:	e8 44 fa ff ff       	callq  4009e0 <map_impl_init>
  400f9c:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
  400fa3:	00 
  400fa4:	48 8b 00             	mov    (%rax),%rax
  400fa7:	44 8b 80 a8 00 00 00 	mov    0xa8(%rax),%r8d
  400fae:	48 8b 50 60          	mov    0x60(%rax),%rdx
  400fb2:	48 8b 48 68          	mov    0x68(%rax),%rcx
  400fb6:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
  400fbd:	48 8b 78 58          	mov    0x58(%rax),%rdi
  400fc1:	4c 8b 48 78          	mov    0x78(%rax),%r9
  400fc5:	44 89 04 24          	mov    %r8d,(%rsp)
  400fc9:	4c 8b 40 70          	mov    0x70(%rax),%r8
  400fcd:	e8 0e fa ff ff       	callq  4009e0 <map_impl_init>
  400fd2:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
  400fd9:	00 
  400fda:	48 8b 00             	mov    (%rax),%rax
  400fdd:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%rax)
  400fe4:	00 00 00 
  400fe7:	58                   	pop    %rax
  400fe8:	5a                   	pop    %rdx
  400fe9:	48 83 c4 78          	add    $0x78,%rsp
  400fed:	44 89 e8             	mov    %r13d,%eax
  400ff0:	5b                   	pop    %rbx
  400ff1:	5d                   	pop    %rbp
  400ff2:	41 5c                	pop    %r12
  400ff4:	41 5d                	pop    %r13
  400ff6:	41 5e                	pop    %r14
  400ff8:	41 5f                	pop    %r15
  400ffa:	c3                   	retq   
  400ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401000:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  401005:	e8 86 f4 ff ff       	callq  400490 <free@plt>
  40100a:	4c 89 f7             	mov    %r14,%rdi
  40100d:	e8 7e f4 ff ff       	callq  400490 <free@plt>
  401012:	4c 89 e7             	mov    %r12,%rdi
  401015:	e8 76 f4 ff ff       	callq  400490 <free@plt>
  40101a:	48 89 df             	mov    %rbx,%rdi
  40101d:	e8 6e f4 ff ff       	callq  400490 <free@plt>
  401022:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
  401029:	00 
  40102a:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40102f:	48 89 08             	mov    %rcx,(%rax)
  401032:	eb b5                	jmp    400fe9 <dmap_allocate+0x2a9>
  401034:	0f 1f 40 00          	nopl   0x0(%rax)
  401038:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
  40103d:	e8 4e f4 ff ff       	callq  400490 <free@plt>
  401042:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  401047:	e8 44 f4 ff ff       	callq  400490 <free@plt>
  40104c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  401051:	e8 3a f4 ff ff       	callq  400490 <free@plt>
  401056:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40105b:	e8 30 f4 ff ff       	callq  400490 <free@plt>
  401060:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  401065:	e8 26 f4 ff ff       	callq  400490 <free@plt>
  40106a:	4c 89 f7             	mov    %r14,%rdi
  40106d:	e8 1e f4 ff ff       	callq  400490 <free@plt>
  401072:	4c 89 e7             	mov    %r12,%rdi
  401075:	e8 16 f4 ff ff       	callq  400490 <free@plt>
  40107a:	eb 9e                	jmp    40101a <dmap_allocate+0x2da>
  40107c:	0f 1f 40 00          	nopl   0x0(%rax)
  401080:	4c 89 ff             	mov    %r15,%rdi
  401083:	e8 08 f4 ff ff       	callq  400490 <free@plt>
  401088:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
  40108d:	e8 fe f3 ff ff       	callq  400490 <free@plt>
  401092:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  401097:	e8 f4 f3 ff ff       	callq  400490 <free@plt>
  40109c:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  4010a1:	e8 ea f3 ff ff       	callq  400490 <free@plt>
  4010a6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4010ab:	e8 e0 f3 ff ff       	callq  400490 <free@plt>
  4010b0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4010b5:	e8 d6 f3 ff ff       	callq  400490 <free@plt>
  4010ba:	4c 89 f7             	mov    %r14,%rdi
  4010bd:	e8 ce f3 ff ff       	callq  400490 <free@plt>
  4010c2:	4c 89 e7             	mov    %r12,%rdi
  4010c5:	e8 c6 f3 ff ff       	callq  400490 <free@plt>
  4010ca:	48 89 df             	mov    %rbx,%rdi
  4010cd:	e8 be f3 ff ff       	callq  400490 <free@plt>
  4010d2:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
  4010d9:	00 
  4010da:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  4010df:	48 89 30             	mov    %rsi,(%rax)
  4010e2:	e9 02 ff ff ff       	jmpq   400fe9 <dmap_allocate+0x2a9>
  4010e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4010ee:	00 00 
  4010f0:	48 89 d7             	mov    %rdx,%rdi
  4010f3:	e8 98 f3 ff ff       	callq  400490 <free@plt>
  4010f8:	4c 89 ef             	mov    %r13,%rdi
  4010fb:	45 31 ed             	xor    %r13d,%r13d
  4010fe:	e8 8d f3 ff ff       	callq  400490 <free@plt>
  401103:	4c 89 ff             	mov    %r15,%rdi
  401106:	e8 85 f3 ff ff       	callq  400490 <free@plt>
  40110b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
  401110:	e8 7b f3 ff ff       	callq  400490 <free@plt>
  401115:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40111a:	e8 71 f3 ff ff       	callq  400490 <free@plt>
  40111f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  401124:	e8 67 f3 ff ff       	callq  400490 <free@plt>
  401129:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40112e:	e8 5d f3 ff ff       	callq  400490 <free@plt>
  401133:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  401138:	e8 53 f3 ff ff       	callq  400490 <free@plt>
  40113d:	4c 89 f7             	mov    %r14,%rdi
  401140:	e8 4b f3 ff ff       	callq  400490 <free@plt>
  401145:	4c 89 e7             	mov    %r12,%rdi
  401148:	e8 43 f3 ff ff       	callq  400490 <free@plt>
  40114d:	48 89 df             	mov    %rbx,%rdi
  401150:	e8 3b f3 ff ff       	callq  400490 <free@plt>
  401155:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
  40115c:	00 
  40115d:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  401162:	48 89 08             	mov    %rcx,(%rax)
  401165:	e9 7f fe ff ff       	jmpq   400fe9 <dmap_allocate+0x2a9>
  40116a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401170 <dmap_get_a>:
  401170:	41 54                	push   %r12
  401172:	55                   	push   %rbp
  401173:	49 89 d4             	mov    %rdx,%r12
  401176:	53                   	push   %rbx
  401177:	48 89 fb             	mov    %rdi,%rbx
  40117a:	48 89 f5             	mov    %rsi,%rbp
  40117d:	48 89 f7             	mov    %rsi,%rdi
  401180:	ff 53 50             	callq  *0x50(%rbx)
  401183:	44 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%r8d
  40118a:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
  40118e:	49 89 e9             	mov    %rbp,%r9
  401191:	48 8b 53 30          	mov    0x30(%rbx),%rdx
  401195:	48 8b 73 28          	mov    0x28(%rbx),%rsi
  401199:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
  40119d:	41 50                	push   %r8
  40119f:	4c 8b 43 40          	mov    0x40(%rbx),%r8
  4011a3:	41 54                	push   %r12
  4011a5:	50                   	push   %rax
  4011a6:	ff 73 48             	pushq  0x48(%rbx)
  4011a9:	e8 62 f8 ff ff       	callq  400a10 <map_impl_get>
  4011ae:	48 83 c4 20          	add    $0x20,%rsp
  4011b2:	5b                   	pop    %rbx
  4011b3:	5d                   	pop    %rbp
  4011b4:	41 5c                	pop    %r12
  4011b6:	c3                   	retq   
  4011b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4011be:	00 00 

00000000004011c0 <dmap_get_b>:
  4011c0:	41 54                	push   %r12
  4011c2:	55                   	push   %rbp
  4011c3:	49 89 d4             	mov    %rdx,%r12
  4011c6:	53                   	push   %rbx
  4011c7:	48 89 fb             	mov    %rdi,%rbx
  4011ca:	48 89 f5             	mov    %rsi,%rbp
  4011cd:	48 89 f7             	mov    %rsi,%rdi
  4011d0:	ff 93 88 00 00 00    	callq  *0x88(%rbx)
  4011d6:	44 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%r8d
  4011dd:	48 8b 4b 70          	mov    0x70(%rbx),%rcx
  4011e1:	49 89 e9             	mov    %rbp,%r9
  4011e4:	48 8b 53 68          	mov    0x68(%rbx),%rdx
  4011e8:	48 8b 73 60          	mov    0x60(%rbx),%rsi
  4011ec:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
  4011f0:	41 50                	push   %r8
  4011f2:	4c 8b 43 78          	mov    0x78(%rbx),%r8
  4011f6:	41 54                	push   %r12
  4011f8:	50                   	push   %rax
  4011f9:	ff b3 80 00 00 00    	pushq  0x80(%rbx)
  4011ff:	e8 0c f8 ff ff       	callq  400a10 <map_impl_get>
  401204:	48 83 c4 20          	add    $0x20,%rsp
  401208:	5b                   	pop    %rbx
  401209:	5d                   	pop    %rbp
  40120a:	41 5c                	pop    %r12
  40120c:	c3                   	retq   
  40120d:	0f 1f 00             	nopl   (%rax)

0000000000401210 <dmap_put>:
  401210:	41 54                	push   %r12
  401212:	55                   	push   %rbp
  401213:	41 89 d4             	mov    %edx,%r12d
  401216:	53                   	push   %rbx
  401217:	48 89 fb             	mov    %rdi,%rbx
  40121a:	48 83 ec 20          	sub    $0x20,%rsp
  40121e:	8b 2f                	mov    (%rdi),%ebp
  401220:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401227:	00 00 
  401229:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  40122e:	31 c0                	xor    %eax,%eax
  401230:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  401237:	00 00 
  401239:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  401240:	00 00 
  401242:	0f af ea             	imul   %edx,%ebp
  401245:	48 63 ed             	movslq %ebp,%rbp
  401248:	48 03 6f 18          	add    0x18(%rdi),%rbp
  40124c:	48 89 ef             	mov    %rbp,%rdi
  40124f:	ff 53 08             	callq  *0x8(%rbx)
  401252:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  401257:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  40125c:	48 89 ef             	mov    %rbp,%rdi
  40125f:	ff 93 90 00 00 00    	callq  *0x90(%rbx)
  401265:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  40126a:	ff 53 50             	callq  *0x50(%rbx)
  40126d:	44 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%r8d
  401274:	48 83 ec 08          	sub    $0x8,%rsp
  401278:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
  40127c:	48 8b 53 30          	mov    0x30(%rbx),%rdx
  401280:	48 8b 73 28          	mov    0x28(%rbx),%rsi
  401284:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
  401288:	41 50                	push   %r8
  40128a:	4c 8b 43 40          	mov    0x40(%rbx),%r8
  40128e:	41 54                	push   %r12
  401290:	50                   	push   %rax
  401291:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
  401296:	e8 95 f8 ff ff       	callq  400b30 <map_impl_put>
  40129b:	48 83 c4 20          	add    $0x20,%rsp
  40129f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4012a4:	ff 93 88 00 00 00    	callq  *0x88(%rbx)
  4012aa:	44 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%r8d
  4012b1:	48 83 ec 08          	sub    $0x8,%rsp
  4012b5:	48 8b 4b 70          	mov    0x70(%rbx),%rcx
  4012b9:	48 8b 53 68          	mov    0x68(%rbx),%rdx
  4012bd:	48 8b 73 60          	mov    0x60(%rbx),%rsi
  4012c1:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
  4012c5:	41 50                	push   %r8
  4012c7:	4c 8b 43 78          	mov    0x78(%rbx),%r8
  4012cb:	41 54                	push   %r12
  4012cd:	50                   	push   %rax
  4012ce:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
  4012d3:	e8 58 f8 ff ff       	callq  400b30 <map_impl_put>
  4012d8:	48 83 c4 20          	add    $0x20,%rsp
  4012dc:	83 83 a0 00 00 00 01 	addl   $0x1,0xa0(%rbx)
  4012e3:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  4012e8:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  4012ed:	48 89 ef             	mov    %rbp,%rdi
  4012f0:	ff 93 98 00 00 00    	callq  *0x98(%rbx)
  4012f6:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  4012fb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  401302:	00 00 
  401304:	75 0e                	jne    401314 <dmap_put+0x104>
  401306:	48 83 c4 20          	add    $0x20,%rsp
  40130a:	b8 01 00 00 00       	mov    $0x1,%eax
  40130f:	5b                   	pop    %rbx
  401310:	5d                   	pop    %rbp
  401311:	41 5c                	pop    %r12
  401313:	c3                   	retq   
  401314:	e8 87 f1 ff ff       	callq  4004a0 <__stack_chk_fail@plt>
  401319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401320 <dmap_get_value>:
  401320:	0f af 37             	imul   (%rdi),%esi
  401323:	48 8b 47 08          	mov    0x8(%rdi),%rax
  401327:	48 63 f6             	movslq %esi,%rsi
  40132a:	48 03 77 18          	add    0x18(%rdi),%rsi
  40132e:	48 89 d7             	mov    %rdx,%rdi
  401331:	ff e0                	jmpq   *%rax
  401333:	0f 1f 00             	nopl   (%rax)
  401336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40133d:	00 00 00 

0000000000401340 <dmap_erase>:
  401340:	41 54                	push   %r12
  401342:	55                   	push   %rbp
  401343:	53                   	push   %rbx
  401344:	48 89 fb             	mov    %rdi,%rbx
  401347:	48 83 ec 30          	sub    $0x30,%rsp
  40134b:	0f af 37             	imul   (%rdi),%esi
  40134e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  401355:	00 00 
  401357:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40135c:	31 c0                	xor    %eax,%eax
  40135e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
  401365:	00 00 
  401367:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
  40136e:	00 00 
  401370:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  401375:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
  40137c:	00 00 
  40137e:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
  401385:	00 00 
  401387:	48 63 ee             	movslq %esi,%rbp
  40138a:	48 03 6f 18          	add    0x18(%rdi),%rbp
  40138e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  401393:	48 89 ef             	mov    %rbp,%rdi
  401396:	ff 93 90 00 00 00    	callq  *0x90(%rbx)
  40139c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  4013a1:	ff 53 50             	callq  *0x50(%rbx)
  4013a4:	48 83 ec 08          	sub    $0x8,%rsp
  4013a8:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
  4013ac:	48 8b 53 30          	mov    0x30(%rbx),%rdx
  4013b0:	4c 8d 44 24 18       	lea    0x18(%rsp),%r8
  4013b5:	48 8b 73 28          	mov    0x28(%rbx),%rsi
  4013b9:	4c 8b 4b 48          	mov    0x48(%rbx),%r9
  4013bd:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
  4013c1:	41 50                	push   %r8
  4013c3:	44 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%r8d
  4013ca:	41 50                	push   %r8
  4013cc:	50                   	push   %rax
  4013cd:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4013d2:	e8 19 f8 ff ff       	callq  400bf0 <map_impl_erase>
  4013d7:	48 83 c4 20          	add    $0x20,%rsp
  4013db:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  4013e0:	ff 93 88 00 00 00    	callq  *0x88(%rbx)
  4013e6:	48 83 ec 08          	sub    $0x8,%rsp
  4013ea:	48 8b 4b 70          	mov    0x70(%rbx),%rcx
  4013ee:	4c 8b 8b 80 00 00 00 	mov    0x80(%rbx),%r9
  4013f5:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
  4013fa:	48 8b 53 68          	mov    0x68(%rbx),%rdx
  4013fe:	48 8b 73 60          	mov    0x60(%rbx),%rsi
  401402:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
  401406:	41 50                	push   %r8
  401408:	44 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%r8d
  40140f:	41 50                	push   %r8
  401411:	50                   	push   %rax
  401412:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
  401417:	e8 d4 f7 ff ff       	callq  400bf0 <map_impl_erase>
  40141c:	48 83 c4 20          	add    $0x20,%rsp
  401420:	4c 8b a3 98 00 00 00 	mov    0x98(%rbx),%r12
  401427:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
  40142c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  401431:	48 89 ef             	mov    %rbp,%rdi
  401434:	41 ff d4             	callq  *%r12
  401437:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  40143c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  401441:	48 89 ef             	mov    %rbp,%rdi
  401444:	41 ff d4             	callq  *%r12
  401447:	48 89 ef             	mov    %rbp,%rdi
  40144a:	ff 53 10             	callq  *0x10(%rbx)
  40144d:	83 ab a0 00 00 00 01 	subl   $0x1,0xa0(%rbx)
  401454:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  401459:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  401460:	00 00 
  401462:	75 0e                	jne    401472 <dmap_erase+0x132>
  401464:	48 83 c4 30          	add    $0x30,%rsp
  401468:	b8 01 00 00 00       	mov    $0x1,%eax
  40146d:	5b                   	pop    %rbx
  40146e:	5d                   	pop    %rbp
  40146f:	41 5c                	pop    %r12
  401471:	c3                   	retq   
  401472:	e8 29 f0 ff ff       	callq  4004a0 <__stack_chk_fail@plt>
  401477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40147e:	00 00 

0000000000401480 <dmap_size>:
  401480:	8b 87 a0 00 00 00    	mov    0xa0(%rdi),%eax
  401486:	c3                   	retq   
  401487:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40148e:	00 00 

0000000000401490 <vector_allocate>:
  401490:	41 57                	push   %r15
  401492:	41 56                	push   %r14
  401494:	45 31 f6             	xor    %r14d,%r14d
  401497:	41 55                	push   %r13
  401499:	41 54                	push   %r12
  40149b:	49 89 d5             	mov    %rdx,%r13
  40149e:	55                   	push   %rbp
  40149f:	53                   	push   %rbx
  4014a0:	48 63 df             	movslq %edi,%rbx
  4014a3:	bf 10 00 00 00       	mov    $0x10,%edi
  4014a8:	89 f5                	mov    %esi,%ebp
  4014aa:	49 89 cc             	mov    %rcx,%r12
  4014ad:	48 83 ec 18          	sub    $0x18,%rsp
  4014b1:	48 8b 01             	mov    (%rcx),%rax
  4014b4:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4014b9:	e8 02 f0 ff ff       	callq  4004c0 <malloc@plt>
  4014be:	48 85 c0             	test   %rax,%rax
  4014c1:	74 5c                	je     40151f <vector_allocate+0x8f>
  4014c3:	89 df                	mov    %ebx,%edi
  4014c5:	49 89 04 24          	mov    %rax,(%r12)
  4014c9:	49 89 c7             	mov    %rax,%r15
  4014cc:	0f af fd             	imul   %ebp,%edi
  4014cf:	48 63 ff             	movslq %edi,%rdi
  4014d2:	e8 e9 ef ff ff       	callq  4004c0 <malloc@plt>
  4014d7:	48 85 c0             	test   %rax,%rax
  4014da:	74 55                	je     401531 <vector_allocate+0xa1>
  4014dc:	85 ed                	test   %ebp,%ebp
  4014de:	49 89 07             	mov    %rax,(%r15)
  4014e1:	41 89 5f 08          	mov    %ebx,0x8(%r15)
  4014e5:	41 89 6f 0c          	mov    %ebp,0xc(%r15)
  4014e9:	7e 2e                	jle    401519 <vector_allocate+0x89>
  4014eb:	48 89 c7             	mov    %rax,%rdi
  4014ee:	45 31 ff             	xor    %r15d,%r15d
  4014f1:	45 31 f6             	xor    %r14d,%r14d
  4014f4:	eb 11                	jmp    401507 <vector_allocate+0x77>
  4014f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4014fd:	00 00 00 
  401500:	49 8b 04 24          	mov    (%r12),%rax
  401504:	48 8b 38             	mov    (%rax),%rdi
  401507:	41 83 c6 01          	add    $0x1,%r14d
  40150b:	4c 01 ff             	add    %r15,%rdi
  40150e:	49 01 df             	add    %rbx,%r15
  401511:	41 ff d5             	callq  *%r13
  401514:	44 39 f5             	cmp    %r14d,%ebp
  401517:	75 e7                	jne    401500 <vector_allocate+0x70>
  401519:	41 be 01 00 00 00    	mov    $0x1,%r14d
  40151f:	48 83 c4 18          	add    $0x18,%rsp
  401523:	44 89 f0             	mov    %r14d,%eax
  401526:	5b                   	pop    %rbx
  401527:	5d                   	pop    %rbp
  401528:	41 5c                	pop    %r12
  40152a:	41 5d                	pop    %r13
  40152c:	41 5e                	pop    %r14
  40152e:	41 5f                	pop    %r15
  401530:	c3                   	retq   
  401531:	4c 89 ff             	mov    %r15,%rdi
  401534:	e8 57 ef ff ff       	callq  400490 <free@plt>
  401539:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  40153e:	49 89 04 24          	mov    %rax,(%r12)
  401542:	eb db                	jmp    40151f <vector_allocate+0x8f>
  401544:	66 90                	xchg   %ax,%ax
  401546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40154d:	00 00 00 

0000000000401550 <vector_borrow_full>:
  401550:	0f af 77 08          	imul   0x8(%rdi),%esi
  401554:	48 63 f6             	movslq %esi,%rsi
  401557:	48 03 37             	add    (%rdi),%rsi
  40155a:	48 89 32             	mov    %rsi,(%rdx)
  40155d:	c3                   	retq   
  40155e:	66 90                	xchg   %ax,%ax

0000000000401560 <vector_borrow_half>:
  401560:	0f af 77 08          	imul   0x8(%rdi),%esi
  401564:	48 63 f6             	movslq %esi,%rsi
  401567:	48 03 37             	add    (%rdi),%rsi
  40156a:	48 89 32             	mov    %rsi,(%rdx)
  40156d:	c3                   	retq   
  40156e:	66 90                	xchg   %ax,%ax

0000000000401570 <vector_return_full>:
  401570:	f3 c3                	repz retq 
  401572:	0f 1f 40 00          	nopl   0x0(%rax)
  401576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40157d:	00 00 00 

0000000000401580 <vector_return_half>:
  401580:	f3 c3                	repz retq 
  401582:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401589:	00 00 00 
  40158c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401590 <map_allocate>:
  401590:	41 57                	push   %r15
  401592:	41 56                	push   %r14
  401594:	41 55                	push   %r13
  401596:	41 54                	push   %r12
  401598:	41 89 d5             	mov    %edx,%r13d
  40159b:	55                   	push   %rbp
  40159c:	53                   	push   %rbx
  40159d:	48 89 cd             	mov    %rcx,%rbp
  4015a0:	48 83 ec 38          	sub    $0x38,%rsp
  4015a4:	48 8b 01             	mov    (%rcx),%rax
  4015a7:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
  4015ac:	bf 40 00 00 00       	mov    $0x40,%edi
  4015b1:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  4015b6:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4015bb:	e8 00 ef ff ff       	callq  4004c0 <malloc@plt>
  4015c0:	48 85 c0             	test   %rax,%rax
  4015c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
  4015ca:	00 
  4015cb:	0f 84 de 00 00 00    	je     4016af <map_allocate+0x11f>
  4015d1:	4d 63 f5             	movslq %r13d,%r14
  4015d4:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4015d8:	49 89 c7             	mov    %rax,%r15
  4015db:	4a 8d 1c b5 00 00 00 	lea    0x0(,%r14,4),%rbx
  4015e2:	00 
  4015e3:	48 89 df             	mov    %rbx,%rdi
  4015e6:	e8 d5 ee ff ff       	callq  4004c0 <malloc@plt>
  4015eb:	48 85 c0             	test   %rax,%rax
  4015ee:	49 89 c4             	mov    %rax,%r12
  4015f1:	0f 84 fb 00 00 00    	je     4016f2 <map_allocate+0x162>
  4015f7:	4a 8d 3c f5 00 00 00 	lea    0x0(,%r14,8),%rdi
  4015fe:	00 
  4015ff:	49 89 07             	mov    %rax,(%r15)
  401602:	e8 b9 ee ff ff       	callq  4004c0 <malloc@plt>
  401607:	48 85 c0             	test   %rax,%rax
  40160a:	49 89 c6             	mov    %rax,%r14
  40160d:	0f 84 d7 00 00 00    	je     4016ea <map_allocate+0x15a>
  401613:	49 89 47 08          	mov    %rax,0x8(%r15)
  401617:	48 89 df             	mov    %rbx,%rdi
  40161a:	e8 a1 ee ff ff       	callq  4004c0 <malloc@plt>
  40161f:	48 85 c0             	test   %rax,%rax
  401622:	0f 84 ba 00 00 00    	je     4016e2 <map_allocate+0x152>
  401628:	49 89 47 10          	mov    %rax,0x10(%r15)
  40162c:	48 89 df             	mov    %rbx,%rdi
  40162f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  401634:	e8 87 ee ff ff       	callq  4004c0 <malloc@plt>
  401639:	48 85 c0             	test   %rax,%rax
  40163c:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  401641:	0f 84 93 00 00 00    	je     4016da <map_allocate+0x14a>
  401647:	49 89 47 18          	mov    %rax,0x18(%r15)
  40164b:	48 89 df             	mov    %rbx,%rdi
  40164e:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
  401653:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  401658:	e8 63 ee ff ff       	callq  4004c0 <malloc@plt>
  40165d:	48 85 c0             	test   %rax,%rax
  401660:	49 89 c1             	mov    %rax,%r9
  401663:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  401668:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40166d:	74 59                	je     4016c8 <map_allocate+0x138>
  40166f:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  401674:	49 89 47 20          	mov    %rax,0x20(%r15)
  401678:	48 83 ec 08          	sub    $0x8,%rsp
  40167c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  401681:	45 89 6f 28          	mov    %r13d,0x28(%r15)
  401685:	4c 89 e7             	mov    %r12,%rdi
  401688:	41 c7 47 2c 00 00 00 	movl   $0x0,0x2c(%r15)
  40168f:	00 
  401690:	49 89 57 38          	mov    %rdx,0x38(%r15)
  401694:	4c 89 f2             	mov    %r14,%rdx
  401697:	49 89 47 30          	mov    %rax,0x30(%r15)
  40169b:	41 55                	push   %r13
  40169d:	48 89 c6             	mov    %rax,%rsi
  4016a0:	e8 3b f3 ff ff       	callq  4009e0 <map_impl_init>
  4016a5:	58                   	pop    %rax
  4016a6:	5a                   	pop    %rdx
  4016a7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%rsp)
  4016ae:	00 
  4016af:	8b 44 24 04          	mov    0x4(%rsp),%eax
  4016b3:	48 83 c4 38          	add    $0x38,%rsp
  4016b7:	5b                   	pop    %rbx
  4016b8:	5d                   	pop    %rbp
  4016b9:	41 5c                	pop    %r12
  4016bb:	41 5d                	pop    %r13
  4016bd:	41 5e                	pop    %r14
  4016bf:	41 5f                	pop    %r15
  4016c1:	c3                   	retq   
  4016c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4016c8:	4c 89 c7             	mov    %r8,%rdi
  4016cb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  4016d0:	e8 bb ed ff ff       	callq  400490 <free@plt>
  4016d5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  4016da:	48 89 cf             	mov    %rcx,%rdi
  4016dd:	e8 ae ed ff ff       	callq  400490 <free@plt>
  4016e2:	4c 89 f7             	mov    %r14,%rdi
  4016e5:	e8 a6 ed ff ff       	callq  400490 <free@plt>
  4016ea:	4c 89 e7             	mov    %r12,%rdi
  4016ed:	e8 9e ed ff ff       	callq  400490 <free@plt>
  4016f2:	4c 89 ff             	mov    %r15,%rdi
  4016f5:	e8 96 ed ff ff       	callq  400490 <free@plt>
  4016fa:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4016ff:	48 89 45 00          	mov    %rax,0x0(%rbp)
  401703:	eb aa                	jmp    4016af <map_allocate+0x11f>
  401705:	90                   	nop
  401706:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40170d:	00 00 00 

0000000000401710 <map_get>:
  401710:	41 54                	push   %r12
  401712:	55                   	push   %rbp
  401713:	49 89 d4             	mov    %rdx,%r12
  401716:	53                   	push   %rbx
  401717:	48 89 fb             	mov    %rdi,%rbx
  40171a:	48 89 f5             	mov    %rsi,%rbp
  40171d:	48 89 f7             	mov    %rsi,%rdi
  401720:	ff 53 38             	callq  *0x38(%rbx)
  401723:	8b 7b 28             	mov    0x28(%rbx),%edi
  401726:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
  40172a:	49 89 e9             	mov    %rbp,%r9
  40172d:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  401731:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  401735:	4c 8b 43 20          	mov    0x20(%rbx),%r8
  401739:	57                   	push   %rdi
  40173a:	48 8b 3b             	mov    (%rbx),%rdi
  40173d:	41 54                	push   %r12
  40173f:	50                   	push   %rax
  401740:	ff 73 30             	pushq  0x30(%rbx)
  401743:	e8 c8 f2 ff ff       	callq  400a10 <map_impl_get>
  401748:	48 83 c4 20          	add    $0x20,%rsp
  40174c:	5b                   	pop    %rbx
  40174d:	5d                   	pop    %rbp
  40174e:	41 5c                	pop    %r12
  401750:	c3                   	retq   
  401751:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40175d:	00 00 00 

0000000000401760 <map_put>:
  401760:	41 54                	push   %r12
  401762:	55                   	push   %rbp
  401763:	41 89 d4             	mov    %edx,%r12d
  401766:	53                   	push   %rbx
  401767:	48 89 fb             	mov    %rdi,%rbx
  40176a:	48 89 f5             	mov    %rsi,%rbp
  40176d:	48 89 f7             	mov    %rsi,%rdi
  401770:	ff 53 38             	callq  *0x38(%rbx)
  401773:	8b 7b 28             	mov    0x28(%rbx),%edi
  401776:	48 83 ec 08          	sub    $0x8,%rsp
  40177a:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
  40177e:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  401782:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  401786:	49 89 e9             	mov    %rbp,%r9
  401789:	4c 8b 43 20          	mov    0x20(%rbx),%r8
  40178d:	57                   	push   %rdi
  40178e:	48 8b 3b             	mov    (%rbx),%rdi
  401791:	41 54                	push   %r12
  401793:	50                   	push   %rax
  401794:	e8 97 f3 ff ff       	callq  400b30 <map_impl_put>
  401799:	48 83 c4 20          	add    $0x20,%rsp
  40179d:	83 43 2c 01          	addl   $0x1,0x2c(%rbx)
  4017a1:	5b                   	pop    %rbx
  4017a2:	5d                   	pop    %rbp
  4017a3:	41 5c                	pop    %r12
  4017a5:	c3                   	retq   
  4017a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017ad:	00 00 00 

00000000004017b0 <map_erase>:
  4017b0:	41 54                	push   %r12
  4017b2:	55                   	push   %rbp
  4017b3:	49 89 d4             	mov    %rdx,%r12
  4017b6:	53                   	push   %rbx
  4017b7:	48 89 fb             	mov    %rdi,%rbx
  4017ba:	48 89 f5             	mov    %rsi,%rbp
  4017bd:	48 89 f7             	mov    %rsi,%rdi
  4017c0:	ff 53 38             	callq  *0x38(%rbx)
  4017c3:	8b 7b 28             	mov    0x28(%rbx),%edi
  4017c6:	48 83 ec 08          	sub    $0x8,%rsp
  4017ca:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
  4017ce:	41 54                	push   %r12
  4017d0:	48 8b 53 10          	mov    0x10(%rbx),%rdx
  4017d4:	49 89 e8             	mov    %rbp,%r8
  4017d7:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  4017db:	4c 8b 4b 30          	mov    0x30(%rbx),%r9
  4017df:	57                   	push   %rdi
  4017e0:	48 8b 3b             	mov    (%rbx),%rdi
  4017e3:	50                   	push   %rax
  4017e4:	e8 07 f4 ff ff       	callq  400bf0 <map_impl_erase>
  4017e9:	48 83 c4 20          	add    $0x20,%rsp
  4017ed:	83 6b 2c 01          	subl   $0x1,0x2c(%rbx)
  4017f1:	5b                   	pop    %rbx
  4017f2:	5d                   	pop    %rbp
  4017f3:	41 5c                	pop    %r12
  4017f5:	c3                   	retq   
  4017f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4017fd:	00 00 00 

0000000000401800 <map_size>:
  401800:	8b 47 2c             	mov    0x2c(%rdi),%eax
  401803:	c3                   	retq   
  401804:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40180b:	00 00 00 
  40180e:	66 90                	xchg   %ax,%ax

0000000000401810 <int_key_eq>:
  401810:	31 c0                	xor    %eax,%eax
  401812:	8b 0e                	mov    (%rsi),%ecx
  401814:	39 0f                	cmp    %ecx,(%rdi)
  401816:	74 08                	je     401820 <int_key_eq+0x10>
  401818:	f3 c3                	repz retq 
  40181a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401820:	8b 56 04             	mov    0x4(%rsi),%edx
  401823:	39 57 04             	cmp    %edx,0x4(%rdi)
  401826:	75 f0                	jne    401818 <int_key_eq+0x8>
  401828:	8b 56 08             	mov    0x8(%rsi),%edx
  40182b:	39 57 08             	cmp    %edx,0x8(%rdi)
  40182e:	75 e8                	jne    401818 <int_key_eq+0x8>
  401830:	8b 57 0c             	mov    0xc(%rdi),%edx
  401833:	8b 46 0c             	mov    0xc(%rsi),%eax
  401836:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
  40183c:	25 ff ff ff 00       	and    $0xffffff,%eax
  401841:	39 c2                	cmp    %eax,%edx
  401843:	0f 94 c0             	sete   %al
  401846:	c3                   	retq   
  401847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40184e:	00 00 

0000000000401850 <ext_key_eq>:
  401850:	31 c0                	xor    %eax,%eax
  401852:	8b 0e                	mov    (%rsi),%ecx
  401854:	39 0f                	cmp    %ecx,(%rdi)
  401856:	74 08                	je     401860 <ext_key_eq+0x10>
  401858:	f3 c3                	repz retq 
  40185a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401860:	8b 56 04             	mov    0x4(%rsi),%edx
  401863:	39 57 04             	cmp    %edx,0x4(%rdi)
  401866:	75 f0                	jne    401858 <ext_key_eq+0x8>
  401868:	8b 56 08             	mov    0x8(%rsi),%edx
  40186b:	39 57 08             	cmp    %edx,0x8(%rdi)
  40186e:	75 e8                	jne    401858 <ext_key_eq+0x8>
  401870:	8b 57 0c             	mov    0xc(%rdi),%edx
  401873:	8b 46 0c             	mov    0xc(%rsi),%eax
  401876:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
  40187c:	25 ff ff ff 00       	and    $0xffffff,%eax
  401881:	39 c2                	cmp    %eax,%edx
  401883:	0f 94 c0             	sete   %al
  401886:	c3                   	retq   
  401887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40188e:	00 00 

0000000000401890 <int_key_hash>:
  401890:	0f b7 07             	movzwl (%rdi),%eax
  401893:	48 89 c2             	mov    %rax,%rdx
  401896:	48 c1 e2 05          	shl    $0x5,%rdx
  40189a:	48 29 c2             	sub    %rax,%rdx
  40189d:	0f b7 47 02          	movzwl 0x2(%rdi),%eax
  4018a1:	48 01 c2             	add    %rax,%rdx
  4018a4:	48 89 d0             	mov    %rdx,%rax
  4018a7:	48 c1 e0 05          	shl    $0x5,%rax
  4018ab:	48 29 d0             	sub    %rdx,%rax
  4018ae:	8b 57 04             	mov    0x4(%rdi),%edx
  4018b1:	48 01 d0             	add    %rdx,%rax
  4018b4:	48 89 c2             	mov    %rax,%rdx
  4018b7:	48 c1 e2 05          	shl    $0x5,%rdx
  4018bb:	48 29 c2             	sub    %rax,%rdx
  4018be:	8b 47 08             	mov    0x8(%rdi),%eax
  4018c1:	48 01 c2             	add    %rax,%rdx
  4018c4:	48 89 d0             	mov    %rdx,%rax
  4018c7:	48 c1 e0 05          	shl    $0x5,%rax
  4018cb:	48 29 d0             	sub    %rdx,%rax
  4018ce:	0f b7 57 0c          	movzwl 0xc(%rdi),%edx
  4018d2:	48 01 d0             	add    %rdx,%rax
  4018d5:	48 ba 03 00 00 00 01 	movabs $0x8000000100000003,%rdx
  4018dc:	00 00 80 
  4018df:	48 89 c1             	mov    %rax,%rcx
  4018e2:	48 c1 e1 05          	shl    $0x5,%rcx
  4018e6:	48 29 c1             	sub    %rax,%rcx
  4018e9:	0f b6 47 0e          	movzbl 0xe(%rdi),%eax
  4018ed:	48 01 c1             	add    %rax,%rcx
  4018f0:	48 89 c8             	mov    %rcx,%rax
  4018f3:	48 f7 ea             	imul   %rdx
  4018f6:	48 89 c8             	mov    %rcx,%rax
  4018f9:	48 c1 f8 3f          	sar    $0x3f,%rax
  4018fd:	48 01 ca             	add    %rcx,%rdx
  401900:	48 c1 fa 1e          	sar    $0x1e,%rdx
  401904:	48 29 c2             	sub    %rax,%rdx
  401907:	48 89 d0             	mov    %rdx,%rax
  40190a:	48 c1 e0 1f          	shl    $0x1f,%rax
  40190e:	48 29 d0             	sub    %rdx,%rax
  401911:	48 29 c1             	sub    %rax,%rcx
  401914:	48 89 c8             	mov    %rcx,%rax
  401917:	c3                   	retq   
  401918:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40191f:	00 

0000000000401920 <ext_key_hash>:
  401920:	0f b7 07             	movzwl (%rdi),%eax
  401923:	48 89 c2             	mov    %rax,%rdx
  401926:	48 c1 e2 05          	shl    $0x5,%rdx
  40192a:	48 29 c2             	sub    %rax,%rdx
  40192d:	0f b7 47 02          	movzwl 0x2(%rdi),%eax
  401931:	48 01 c2             	add    %rax,%rdx
  401934:	48 89 d0             	mov    %rdx,%rax
  401937:	48 c1 e0 05          	shl    $0x5,%rax
  40193b:	48 29 d0             	sub    %rdx,%rax
  40193e:	8b 57 04             	mov    0x4(%rdi),%edx
  401941:	48 01 d0             	add    %rdx,%rax
  401944:	48 89 c2             	mov    %rax,%rdx
  401947:	48 c1 e2 05          	shl    $0x5,%rdx
  40194b:	48 29 c2             	sub    %rax,%rdx
  40194e:	8b 47 08             	mov    0x8(%rdi),%eax
  401951:	48 01 c2             	add    %rax,%rdx
  401954:	48 89 d0             	mov    %rdx,%rax
  401957:	48 c1 e0 05          	shl    $0x5,%rax
  40195b:	48 29 d0             	sub    %rdx,%rax
  40195e:	0f b7 57 0c          	movzwl 0xc(%rdi),%edx
  401962:	48 01 d0             	add    %rdx,%rax
  401965:	48 ba 03 00 00 00 01 	movabs $0x8000000100000003,%rdx
  40196c:	00 00 80 
  40196f:	48 89 c1             	mov    %rax,%rcx
  401972:	48 c1 e1 05          	shl    $0x5,%rcx
  401976:	48 29 c1             	sub    %rax,%rcx
  401979:	0f b6 47 0e          	movzbl 0xe(%rdi),%eax
  40197d:	48 01 c1             	add    %rax,%rcx
  401980:	48 89 c8             	mov    %rcx,%rax
  401983:	48 f7 ea             	imul   %rdx
  401986:	48 89 c8             	mov    %rcx,%rax
  401989:	48 c1 f8 3f          	sar    $0x3f,%rax
  40198d:	48 01 ca             	add    %rcx,%rdx
  401990:	48 c1 fa 1e          	sar    $0x1e,%rdx
  401994:	48 29 c2             	sub    %rax,%rdx
  401997:	48 89 d0             	mov    %rdx,%rax
  40199a:	48 c1 e0 1f          	shl    $0x1f,%rax
  40199e:	48 29 d0             	sub    %rdx,%rax
  4019a1:	48 29 c1             	sub    %rax,%rcx
  4019a4:	48 89 c8             	mov    %rcx,%rax
  4019a7:	c3                   	retq   
  4019a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4019af:	00 

00000000004019b0 <flow_extract_keys>:
  4019b0:	48 89 3e             	mov    %rdi,(%rsi)
  4019b3:	48 83 c7 10          	add    $0x10,%rdi
  4019b7:	48 89 3a             	mov    %rdi,(%rdx)
  4019ba:	c3                   	retq   
  4019bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004019c0 <flow_pack_keys>:
  4019c0:	f3 c3                	repz retq 
  4019c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4019c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019cd:	00 00 00 

00000000004019d0 <flow_cpy>:
  4019d0:	0f b7 06             	movzwl (%rsi),%eax
  4019d3:	66 89 07             	mov    %ax,(%rdi)
  4019d6:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
  4019da:	66 89 47 02          	mov    %ax,0x2(%rdi)
  4019de:	8b 46 04             	mov    0x4(%rsi),%eax
  4019e1:	89 47 04             	mov    %eax,0x4(%rdi)
  4019e4:	8b 46 08             	mov    0x8(%rsi),%eax
  4019e7:	89 47 08             	mov    %eax,0x8(%rdi)
  4019ea:	0f b7 46 0c          	movzwl 0xc(%rsi),%eax
  4019ee:	66 89 47 0c          	mov    %ax,0xc(%rdi)
  4019f2:	0f b6 46 0e          	movzbl 0xe(%rsi),%eax
  4019f6:	88 47 0e             	mov    %al,0xe(%rdi)
  4019f9:	0f b7 46 10          	movzwl 0x10(%rsi),%eax
  4019fd:	66 89 47 10          	mov    %ax,0x10(%rdi)
  401a01:	0f b7 46 12          	movzwl 0x12(%rsi),%eax
  401a05:	66 89 47 12          	mov    %ax,0x12(%rdi)
  401a09:	8b 46 14             	mov    0x14(%rsi),%eax
  401a0c:	89 47 14             	mov    %eax,0x14(%rdi)
  401a0f:	8b 46 18             	mov    0x18(%rsi),%eax
  401a12:	89 47 18             	mov    %eax,0x18(%rdi)
  401a15:	0f b7 46 1c          	movzwl 0x1c(%rsi),%eax
  401a19:	66 89 47 1c          	mov    %ax,0x1c(%rdi)
  401a1d:	0f b6 46 1e          	movzbl 0x1e(%rsi),%eax
  401a21:	88 47 1e             	mov    %al,0x1e(%rdi)
  401a24:	0f b7 46 20          	movzwl 0x20(%rsi),%eax
  401a28:	66 89 47 20          	mov    %ax,0x20(%rdi)
  401a2c:	0f b7 46 22          	movzwl 0x22(%rsi),%eax
  401a30:	66 89 47 22          	mov    %ax,0x22(%rdi)
  401a34:	0f b7 46 24          	movzwl 0x24(%rsi),%eax
  401a38:	66 89 47 24          	mov    %ax,0x24(%rdi)
  401a3c:	8b 46 28             	mov    0x28(%rsi),%eax
  401a3f:	89 47 28             	mov    %eax,0x28(%rdi)
  401a42:	8b 46 2c             	mov    0x2c(%rsi),%eax
  401a45:	89 47 2c             	mov    %eax,0x2c(%rdi)
  401a48:	8b 46 30             	mov    0x30(%rsi),%eax
  401a4b:	89 47 30             	mov    %eax,0x30(%rdi)
  401a4e:	0f b7 46 34          	movzwl 0x34(%rsi),%eax
  401a52:	66 89 47 34          	mov    %ax,0x34(%rdi)
  401a56:	0f b7 46 36          	movzwl 0x36(%rsi),%eax
  401a5a:	66 89 47 36          	mov    %ax,0x36(%rdi)
  401a5e:	0f b6 46 38          	movzbl 0x38(%rsi),%eax
  401a62:	88 47 38             	mov    %al,0x38(%rdi)
  401a65:	c3                   	retq   
  401a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a6d:	00 00 00 

0000000000401a70 <flow_destroy>:
  401a70:	f3 c3                	repz retq 
  401a72:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a79:	00 00 00 
  401a7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401a80 <__libc_csu_init>:
  401a80:	41 57                	push   %r15
  401a82:	41 56                	push   %r14
  401a84:	41 89 ff             	mov    %edi,%r15d
  401a87:	41 55                	push   %r13
  401a89:	41 54                	push   %r12
  401a8b:	4c 8d 25 7e 13 20 00 	lea    0x20137e(%rip),%r12        # 602e10 <__frame_dummy_init_array_entry>
  401a92:	55                   	push   %rbp
  401a93:	48 8d 2d 7e 13 20 00 	lea    0x20137e(%rip),%rbp        # 602e18 <__init_array_end>
  401a9a:	53                   	push   %rbx
  401a9b:	49 89 f6             	mov    %rsi,%r14
  401a9e:	49 89 d5             	mov    %rdx,%r13
  401aa1:	4c 29 e5             	sub    %r12,%rbp
  401aa4:	48 83 ec 08          	sub    $0x8,%rsp
  401aa8:	48 c1 fd 03          	sar    $0x3,%rbp
  401aac:	e8 af e9 ff ff       	callq  400460 <_init>
  401ab1:	48 85 ed             	test   %rbp,%rbp
  401ab4:	74 20                	je     401ad6 <__libc_csu_init+0x56>
  401ab6:	31 db                	xor    %ebx,%ebx
  401ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401abf:	00 
  401ac0:	4c 89 ea             	mov    %r13,%rdx
  401ac3:	4c 89 f6             	mov    %r14,%rsi
  401ac6:	44 89 ff             	mov    %r15d,%edi
  401ac9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  401acd:	48 83 c3 01          	add    $0x1,%rbx
  401ad1:	48 39 eb             	cmp    %rbp,%rbx
  401ad4:	75 ea                	jne    401ac0 <__libc_csu_init+0x40>
  401ad6:	48 83 c4 08          	add    $0x8,%rsp
  401ada:	5b                   	pop    %rbx
  401adb:	5d                   	pop    %rbp
  401adc:	41 5c                	pop    %r12
  401ade:	41 5d                	pop    %r13
  401ae0:	41 5e                	pop    %r14
  401ae2:	41 5f                	pop    %r15
  401ae4:	c3                   	retq   
  401ae5:	90                   	nop
  401ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401aed:	00 00 00 

0000000000401af0 <__libc_csu_fini>:
  401af0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000401af4 <_fini>:
  401af4:	48 83 ec 08          	sub    $0x8,%rsp
  401af8:	48 83 c4 08          	add    $0x8,%rsp
  401afc:	c3                   	retq   
