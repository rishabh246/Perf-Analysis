
libVig.o:     file format elf64-x86-64


Disassembly of section .init:

00000000004004d0 <_init>:
  4004d0:	48 83 ec 08          	sub    $0x8,%rsp
  4004d4:	48 8b 05 1d 1b 20 00 	mov    0x201b1d(%rip),%rax        # 601ff8 <_DYNAMIC+0x1d0>
  4004db:	48 85 c0             	test   %rax,%rax
  4004de:	74 05                	je     4004e5 <_init+0x15>
  4004e0:	e8 7b 00 00 00       	callq  400560 <malloc@plt+0x10>
  4004e5:	48 83 c4 08          	add    $0x8,%rsp
  4004e9:	c3                   	retq   

Disassembly of section .plt:

00000000004004f0 <free@plt-0x10>:
  4004f0:	ff 35 12 1b 20 00    	pushq  0x201b12(%rip)        # 602008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004f6:	ff 25 14 1b 20 00    	jmpq   *0x201b14(%rip)        # 602010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <free@plt>:
  400500:	ff 25 12 1b 20 00    	jmpq   *0x201b12(%rip)        # 602018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400506:	68 00 00 00 00       	pushq  $0x0
  40050b:	e9 e0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400510 <abort@plt>:
  400510:	ff 25 0a 1b 20 00    	jmpq   *0x201b0a(%rip)        # 602020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400516:	68 01 00 00 00       	pushq  $0x1
  40051b:	e9 d0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400520 <__stack_chk_fail@plt>:
  400520:	ff 25 02 1b 20 00    	jmpq   *0x201b02(%rip)        # 602028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400526:	68 02 00 00 00       	pushq  $0x2
  40052b:	e9 c0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400530 <__libc_start_main@plt>:
  400530:	ff 25 fa 1a 20 00    	jmpq   *0x201afa(%rip)        # 602030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400536:	68 03 00 00 00       	pushq  $0x3
  40053b:	e9 b0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400540 <calloc@plt>:
  400540:	ff 25 f2 1a 20 00    	jmpq   *0x201af2(%rip)        # 602038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400546:	68 04 00 00 00       	pushq  $0x4
  40054b:	e9 a0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400550 <malloc@plt>:
  400550:	ff 25 ea 1a 20 00    	jmpq   *0x201aea(%rip)        # 602040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400556:	68 05 00 00 00       	pushq  $0x5
  40055b:	e9 90 ff ff ff       	jmpq   4004f0 <_init+0x20>

Disassembly of section .plt.got:

0000000000400560 <.plt.got>:
  400560:	ff 25 92 1a 20 00    	jmpq   *0x201a92(%rip)        # 601ff8 <_DYNAMIC+0x1d0>
  400566:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400570 <main>:
  400570:	31 c0                	xor    %eax,%eax
  400572:	c3                   	retq   
  400573:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40057a:	00 00 00 
  40057d:	0f 1f 00             	nopl   (%rax)

0000000000400580 <_start>:
  400580:	31 ed                	xor    %ebp,%ebp
  400582:	49 89 d1             	mov    %rdx,%r9
  400585:	5e                   	pop    %rsi
  400586:	48 89 e2             	mov    %rsp,%rdx
  400589:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40058d:	50                   	push   %rax
  40058e:	54                   	push   %rsp
  40058f:	49 c7 c0 30 15 40 00 	mov    $0x401530,%r8
  400596:	48 c7 c1 c0 14 40 00 	mov    $0x4014c0,%rcx
  40059d:	48 c7 c7 70 05 40 00 	mov    $0x400570,%rdi
  4005a4:	e8 87 ff ff ff       	callq  400530 <__libc_start_main@plt>
  4005a9:	f4                   	hlt    
  4005aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005b0 <deregister_tm_clones>:
  4005b0:	b8 5f 20 60 00       	mov    $0x60205f,%eax
  4005b5:	55                   	push   %rbp
  4005b6:	48 2d 58 20 60 00    	sub    $0x602058,%rax
  4005bc:	48 83 f8 0e          	cmp    $0xe,%rax
  4005c0:	48 89 e5             	mov    %rsp,%rbp
  4005c3:	76 1b                	jbe    4005e0 <deregister_tm_clones+0x30>
  4005c5:	b8 00 00 00 00       	mov    $0x0,%eax
  4005ca:	48 85 c0             	test   %rax,%rax
  4005cd:	74 11                	je     4005e0 <deregister_tm_clones+0x30>
  4005cf:	5d                   	pop    %rbp
  4005d0:	bf 58 20 60 00       	mov    $0x602058,%edi
  4005d5:	ff e0                	jmpq   *%rax
  4005d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4005de:	00 00 
  4005e0:	5d                   	pop    %rbp
  4005e1:	c3                   	retq   
  4005e2:	0f 1f 40 00          	nopl   0x0(%rax)
  4005e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005ed:	00 00 00 

00000000004005f0 <register_tm_clones>:
  4005f0:	be 58 20 60 00       	mov    $0x602058,%esi
  4005f5:	55                   	push   %rbp
  4005f6:	48 81 ee 58 20 60 00 	sub    $0x602058,%rsi
  4005fd:	48 c1 fe 03          	sar    $0x3,%rsi
  400601:	48 89 e5             	mov    %rsp,%rbp
  400604:	48 89 f0             	mov    %rsi,%rax
  400607:	48 c1 e8 3f          	shr    $0x3f,%rax
  40060b:	48 01 c6             	add    %rax,%rsi
  40060e:	48 d1 fe             	sar    %rsi
  400611:	74 15                	je     400628 <register_tm_clones+0x38>
  400613:	b8 00 00 00 00       	mov    $0x0,%eax
  400618:	48 85 c0             	test   %rax,%rax
  40061b:	74 0b                	je     400628 <register_tm_clones+0x38>
  40061d:	5d                   	pop    %rbp
  40061e:	bf 58 20 60 00       	mov    $0x602058,%edi
  400623:	ff e0                	jmpq   *%rax
  400625:	0f 1f 00             	nopl   (%rax)
  400628:	5d                   	pop    %rbp
  400629:	c3                   	retq   
  40062a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400630 <__do_global_dtors_aux>:
  400630:	80 3d 21 1a 20 00 00 	cmpb   $0x0,0x201a21(%rip)        # 602058 <__TMC_END__>
  400637:	75 11                	jne    40064a <__do_global_dtors_aux+0x1a>
  400639:	55                   	push   %rbp
  40063a:	48 89 e5             	mov    %rsp,%rbp
  40063d:	e8 6e ff ff ff       	callq  4005b0 <deregister_tm_clones>
  400642:	5d                   	pop    %rbp
  400643:	c6 05 0e 1a 20 00 01 	movb   $0x1,0x201a0e(%rip)        # 602058 <__TMC_END__>
  40064a:	f3 c3                	repz retq 
  40064c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400650 <frame_dummy>:
  400650:	bf 20 1e 60 00       	mov    $0x601e20,%edi
  400655:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400659:	75 05                	jne    400660 <frame_dummy+0x10>
  40065b:	eb 93                	jmp    4005f0 <register_tm_clones>
  40065d:	0f 1f 00             	nopl   (%rax)
  400660:	b8 00 00 00 00       	mov    $0x0,%eax
  400665:	48 85 c0             	test   %rax,%rax
  400668:	74 f1                	je     40065b <frame_dummy+0xb>
  40066a:	55                   	push   %rbp
  40066b:	48 89 e5             	mov    %rsp,%rbp
  40066e:	ff d0                	callq  *%rax
  400670:	5d                   	pop    %rbp
  400671:	e9 7a ff ff ff       	jmpq   4005f0 <register_tm_clones>
  400676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40067d:	00 00 00 

0000000000400680 <expire_items>:
  400680:	41 55                	push   %r13
  400682:	41 54                	push   %r12
  400684:	49 89 f5             	mov    %rsi,%r13
  400687:	55                   	push   %rbp
  400688:	53                   	push   %rbx
  400689:	49 89 fc             	mov    %rdi,%r12
  40068c:	48 89 d5             	mov    %rdx,%rbp
  40068f:	31 db                	xor    %ebx,%ebx
  400691:	48 83 ec 18          	sub    $0x18,%rsp
  400695:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40069c:	00 00 
  40069e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4006a3:	31 c0                	xor    %eax,%eax
  4006a5:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%rsp)
  4006ac:	ff 
  4006ad:	eb 10                	jmp    4006bf <expire_items+0x3f>
  4006af:	90                   	nop
  4006b0:	8b 74 24 04          	mov    0x4(%rsp),%esi
  4006b4:	4c 89 ef             	mov    %r13,%rdi
  4006b7:	83 c3 01             	add    $0x1,%ebx
  4006ba:	e8 e1 09 00 00       	callq  4010a0 <dmap_erase>
  4006bf:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
  4006c4:	48 89 ea             	mov    %rbp,%rdx
  4006c7:	4c 89 e7             	mov    %r12,%rdi
  4006ca:	e8 f1 01 00 00       	callq  4008c0 <dchain_expire_one_index>
  4006cf:	85 c0                	test   %eax,%eax
  4006d1:	75 dd                	jne    4006b0 <expire_items+0x30>
  4006d3:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  4006d8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  4006df:	00 00 
  4006e1:	89 d8                	mov    %ebx,%eax
  4006e3:	75 0b                	jne    4006f0 <expire_items+0x70>
  4006e5:	48 83 c4 18          	add    $0x18,%rsp
  4006e9:	5b                   	pop    %rbx
  4006ea:	5d                   	pop    %rbp
  4006eb:	41 5c                	pop    %r12
  4006ed:	41 5d                	pop    %r13
  4006ef:	c3                   	retq   
  4006f0:	e8 2b fe ff ff       	callq  400520 <__stack_chk_fail@plt>
  4006f5:	90                   	nop
  4006f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006fd:	00 00 00 

0000000000400700 <expire_items_single_map>:
  400700:	41 56                	push   %r14
  400702:	41 55                	push   %r13
  400704:	49 89 d6             	mov    %rdx,%r14
  400707:	41 54                	push   %r12
  400709:	55                   	push   %rbp
  40070a:	49 89 fd             	mov    %rdi,%r13
  40070d:	53                   	push   %rbx
  40070e:	48 89 f5             	mov    %rsi,%rbp
  400711:	49 89 cc             	mov    %rcx,%r12
  400714:	31 db                	xor    %ebx,%ebx
  400716:	48 83 ec 20          	sub    $0x20,%rsp
  40071a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400721:	00 00 
  400723:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400728:	31 c0                	xor    %eax,%eax
  40072a:	c7 44 24 0c ff ff ff 	movl   $0xffffffff,0xc(%rsp)
  400731:	ff 
  400732:	eb 3b                	jmp    40076f <expire_items_single_map+0x6f>
  400734:	0f 1f 40 00          	nopl   0x0(%rax)
  400738:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40073c:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  400741:	48 89 ef             	mov    %rbp,%rdi
  400744:	83 c3 01             	add    $0x1,%ebx
  400747:	e8 d4 0a 00 00       	callq  401220 <vector_borrow_half>
  40074c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  400751:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  400756:	4c 89 f7             	mov    %r14,%rdi
  400759:	e8 92 05 00 00       	callq  400cf0 <map_erase>
  40075e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  400763:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  400767:	48 89 ef             	mov    %rbp,%rdi
  40076a:	e8 c1 0a 00 00       	callq  401230 <vector_return_full>
  40076f:	48 8d 74 24 0c       	lea    0xc(%rsp),%rsi
  400774:	4c 89 e2             	mov    %r12,%rdx
  400777:	4c 89 ef             	mov    %r13,%rdi
  40077a:	e8 41 01 00 00       	callq  4008c0 <dchain_expire_one_index>
  40077f:	85 c0                	test   %eax,%eax
  400781:	75 b5                	jne    400738 <expire_items_single_map+0x38>
  400783:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  400788:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  40078f:	00 00 
  400791:	89 d8                	mov    %ebx,%eax
  400793:	75 0d                	jne    4007a2 <expire_items_single_map+0xa2>
  400795:	48 83 c4 20          	add    $0x20,%rsp
  400799:	5b                   	pop    %rbx
  40079a:	5d                   	pop    %rbp
  40079b:	41 5c                	pop    %r12
  40079d:	41 5d                	pop    %r13
  40079f:	41 5e                	pop    %r14
  4007a1:	c3                   	retq   
  4007a2:	e8 79 fd ff ff       	callq  400520 <__stack_chk_fail@plt>
  4007a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4007ae:	00 00 

00000000004007b0 <dchain_allocate>:
  4007b0:	41 57                	push   %r15
  4007b2:	41 56                	push   %r14
  4007b4:	41 55                	push   %r13
  4007b6:	41 54                	push   %r12
  4007b8:	41 89 fd             	mov    %edi,%r13d
  4007bb:	55                   	push   %rbp
  4007bc:	53                   	push   %rbx
  4007bd:	bf 10 00 00 00       	mov    $0x10,%edi
  4007c2:	48 89 f5             	mov    %rsi,%rbp
  4007c5:	45 31 e4             	xor    %r12d,%r12d
  4007c8:	48 83 ec 18          	sub    $0x18,%rsp
  4007cc:	48 8b 06             	mov    (%rsi),%rax
  4007cf:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4007d4:	e8 77 fd ff ff       	callq  400550 <malloc@plt>
  4007d9:	48 85 c0             	test   %rax,%rax
  4007dc:	74 48                	je     400826 <dchain_allocate+0x76>
  4007de:	41 8d 5d 02          	lea    0x2(%r13),%ebx
  4007e2:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4007e6:	49 89 c7             	mov    %rax,%r15
  4007e9:	48 63 db             	movslq %ebx,%rbx
  4007ec:	48 c1 e3 03          	shl    $0x3,%rbx
  4007f0:	48 89 df             	mov    %rbx,%rdi
  4007f3:	e8 58 fd ff ff       	callq  400550 <malloc@plt>
  4007f8:	48 85 c0             	test   %rax,%rax
  4007fb:	49 89 c6             	mov    %rax,%r14
  4007fe:	74 48                	je     400848 <dchain_allocate+0x98>
  400800:	48 8d 7b f0          	lea    -0x10(%rbx),%rdi
  400804:	49 89 07             	mov    %rax,(%r15)
  400807:	e8 44 fd ff ff       	callq  400550 <malloc@plt>
  40080c:	48 85 c0             	test   %rax,%rax
  40080f:	74 2f                	je     400840 <dchain_allocate+0x90>
  400811:	49 89 47 08          	mov    %rax,0x8(%r15)
  400815:	44 89 ee             	mov    %r13d,%esi
  400818:	4c 89 f7             	mov    %r14,%rdi
  40081b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
  400821:	e8 ea 00 00 00       	callq  400910 <dchain_impl_init>
  400826:	48 83 c4 18          	add    $0x18,%rsp
  40082a:	44 89 e0             	mov    %r12d,%eax
  40082d:	5b                   	pop    %rbx
  40082e:	5d                   	pop    %rbp
  40082f:	41 5c                	pop    %r12
  400831:	41 5d                	pop    %r13
  400833:	41 5e                	pop    %r14
  400835:	41 5f                	pop    %r15
  400837:	c3                   	retq   
  400838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40083f:	00 
  400840:	4c 89 f7             	mov    %r14,%rdi
  400843:	e8 b8 fc ff ff       	callq  400500 <free@plt>
  400848:	4c 89 ff             	mov    %r15,%rdi
  40084b:	e8 b0 fc ff ff       	callq  400500 <free@plt>
  400850:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  400855:	48 89 45 00          	mov    %rax,0x0(%rbp)
  400859:	eb cb                	jmp    400826 <dchain_allocate+0x76>
  40085b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400860 <dchain_allocate_new_index>:
  400860:	41 54                	push   %r12
  400862:	55                   	push   %rbp
  400863:	49 89 d4             	mov    %rdx,%r12
  400866:	53                   	push   %rbx
  400867:	48 89 fb             	mov    %rdi,%rbx
  40086a:	48 8b 3f             	mov    (%rdi),%rdi
  40086d:	48 89 f5             	mov    %rsi,%rbp
  400870:	e8 fb 00 00 00       	callq  400970 <dchain_impl_allocate_new_index>
  400875:	85 c0                	test   %eax,%eax
  400877:	74 0c                	je     400885 <dchain_allocate_new_index+0x25>
  400879:	48 63 4d 00          	movslq 0x0(%rbp),%rcx
  40087d:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  400881:	4c 89 24 ca          	mov    %r12,(%rdx,%rcx,8)
  400885:	5b                   	pop    %rbx
  400886:	5d                   	pop    %rbp
  400887:	41 5c                	pop    %r12
  400889:	c3                   	retq   
  40088a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400890 <dchain_rejuvenate_index>:
  400890:	41 54                	push   %r12
  400892:	55                   	push   %rbp
  400893:	48 89 fd             	mov    %rdi,%rbp
  400896:	53                   	push   %rbx
  400897:	48 8b 3f             	mov    (%rdi),%rdi
  40089a:	48 63 de             	movslq %esi,%rbx
  40089d:	89 de                	mov    %ebx,%esi
  40089f:	49 89 d4             	mov    %rdx,%r12
  4008a2:	e8 79 01 00 00       	callq  400a20 <dchain_impl_rejuvenate_index>
  4008a7:	85 c0                	test   %eax,%eax
  4008a9:	74 08                	je     4008b3 <dchain_rejuvenate_index+0x23>
  4008ab:	48 8b 55 08          	mov    0x8(%rbp),%rdx
  4008af:	4c 89 24 da          	mov    %r12,(%rdx,%rbx,8)
  4008b3:	5b                   	pop    %rbx
  4008b4:	5d                   	pop    %rbp
  4008b5:	41 5c                	pop    %r12
  4008b7:	c3                   	retq   
  4008b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4008bf:	00 

00000000004008c0 <dchain_expire_one_index>:
  4008c0:	41 54                	push   %r12
  4008c2:	55                   	push   %rbp
  4008c3:	49 89 d4             	mov    %rdx,%r12
  4008c6:	53                   	push   %rbx
  4008c7:	48 89 fb             	mov    %rdi,%rbx
  4008ca:	48 8b 3f             	mov    (%rdi),%rdi
  4008cd:	48 89 f5             	mov    %rsi,%rbp
  4008d0:	e8 2b 01 00 00       	callq  400a00 <dchain_impl_get_oldest_index>
  4008d5:	85 c0                	test   %eax,%eax
  4008d7:	74 11                	je     4008ea <dchain_expire_one_index+0x2a>
  4008d9:	48 63 55 00          	movslq 0x0(%rbp),%rdx
  4008dd:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4008e1:	4c 39 24 d0          	cmp    %r12,(%rax,%rdx,8)
  4008e5:	48 89 d6             	mov    %rdx,%rsi
  4008e8:	7c 0e                	jl     4008f8 <dchain_expire_one_index+0x38>
  4008ea:	5b                   	pop    %rbx
  4008eb:	31 c0                	xor    %eax,%eax
  4008ed:	5d                   	pop    %rbp
  4008ee:	41 5c                	pop    %r12
  4008f0:	c3                   	retq   
  4008f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4008f8:	48 8b 3b             	mov    (%rbx),%rdi
  4008fb:	5b                   	pop    %rbx
  4008fc:	5d                   	pop    %rbp
  4008fd:	41 5c                	pop    %r12
  4008ff:	e9 bc 00 00 00       	jmpq   4009c0 <dchain_impl_free_index>
  400904:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40090b:	00 00 00 
  40090e:	66 90                	xchg   %ax,%ax

0000000000400910 <dchain_impl_init>:
  400910:	83 fe 01             	cmp    $0x1,%esi
  400913:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
  400919:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  400920:	c7 47 0c 02 00 00 00 	movl   $0x2,0xc(%rdi)
  400927:	c7 47 08 02 00 00 00 	movl   $0x2,0x8(%rdi)
  40092e:	7e 38                	jle    400968 <dchain_impl_init+0x58>
  400930:	48 8d 57 14          	lea    0x14(%rdi),%rdx
  400934:	83 c6 01             	add    $0x1,%esi
  400937:	b8 02 00 00 00       	mov    $0x2,%eax
  40093c:	0f 1f 40 00          	nopl   0x0(%rax)
  400940:	83 c0 01             	add    $0x1,%eax
  400943:	48 83 c2 08          	add    $0x8,%rdx
  400947:	89 42 f8             	mov    %eax,-0x8(%rdx)
  40094a:	89 42 f4             	mov    %eax,-0xc(%rdx)
  40094d:	39 f0                	cmp    %esi,%eax
  40094f:	75 ef                	jne    400940 <dchain_impl_init+0x30>
  400951:	48 98                	cltq   
  400953:	48 c1 e0 03          	shl    $0x3,%rax
  400957:	48 01 c7             	add    %rax,%rdi
  40095a:	c7 47 04 01 00 00 00 	movl   $0x1,0x4(%rdi)
  400961:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
  400967:	c3                   	retq   
  400968:	b8 10 00 00 00       	mov    $0x10,%eax
  40096d:	eb e8                	jmp    400957 <dchain_impl_init+0x47>
  40096f:	90                   	nop

0000000000400970 <dchain_impl_allocate_new_index>:
  400970:	8b 47 0c             	mov    0xc(%rdi),%eax
  400973:	83 f8 01             	cmp    $0x1,%eax
  400976:	74 38                	je     4009b0 <dchain_impl_allocate_new_index+0x40>
  400978:	48 63 d0             	movslq %eax,%rdx
  40097b:	48 8d 14 d7          	lea    (%rdi,%rdx,8),%rdx
  40097f:	8b 4a 04             	mov    0x4(%rdx),%ecx
  400982:	89 4f 0c             	mov    %ecx,0xc(%rdi)
  400985:	89 4f 08             	mov    %ecx,0x8(%rdi)
  400988:	8b 0f                	mov    (%rdi),%ecx
  40098a:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  400991:	89 0a                	mov    %ecx,(%rdx)
  400993:	48 63 17             	movslq (%rdi),%rdx
  400996:	89 44 d7 04          	mov    %eax,0x4(%rdi,%rdx,8)
  40099a:	89 07                	mov    %eax,(%rdi)
  40099c:	83 e8 02             	sub    $0x2,%eax
  40099f:	89 06                	mov    %eax,(%rsi)
  4009a1:	b8 01 00 00 00       	mov    $0x1,%eax
  4009a6:	c3                   	retq   
  4009a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4009ae:	00 00 
  4009b0:	31 c0                	xor    %eax,%eax
  4009b2:	c3                   	retq   
  4009b3:	0f 1f 00             	nopl   (%rax)
  4009b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009bd:	00 00 00 

00000000004009c0 <dchain_impl_free_index>:
  4009c0:	83 c6 02             	add    $0x2,%esi
  4009c3:	48 63 c6             	movslq %esi,%rax
  4009c6:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
  4009ca:	44 8b 01             	mov    (%rcx),%r8d
  4009cd:	48 63 51 04          	movslq 0x4(%rcx),%rdx
  4009d1:	45 85 c0             	test   %r8d,%r8d
  4009d4:	74 0a                	je     4009e0 <dchain_impl_free_index+0x20>
  4009d6:	31 c0                	xor    %eax,%eax
  4009d8:	41 39 d0             	cmp    %edx,%r8d
  4009db:	75 03                	jne    4009e0 <dchain_impl_free_index+0x20>
  4009dd:	f3 c3                	repz retq 
  4009df:	90                   	nop
  4009e0:	49 63 c0             	movslq %r8d,%rax
  4009e3:	89 54 c7 04          	mov    %edx,0x4(%rdi,%rax,8)
  4009e7:	8b 47 0c             	mov    0xc(%rdi),%eax
  4009ea:	44 89 04 d7          	mov    %r8d,(%rdi,%rdx,8)
  4009ee:	89 41 04             	mov    %eax,0x4(%rcx)
  4009f1:	89 01                	mov    %eax,(%rcx)
  4009f3:	b8 01 00 00 00       	mov    $0x1,%eax
  4009f8:	89 77 0c             	mov    %esi,0xc(%rdi)
  4009fb:	89 77 08             	mov    %esi,0x8(%rdi)
  4009fe:	c3                   	retq   
  4009ff:	90                   	nop

0000000000400a00 <dchain_impl_get_oldest_index>:
  400a00:	8b 57 04             	mov    0x4(%rdi),%edx
  400a03:	39 17                	cmp    %edx,(%rdi)
  400a05:	75 09                	jne    400a10 <dchain_impl_get_oldest_index+0x10>
  400a07:	31 c0                	xor    %eax,%eax
  400a09:	85 d2                	test   %edx,%edx
  400a0b:	75 03                	jne    400a10 <dchain_impl_get_oldest_index+0x10>
  400a0d:	f3 c3                	repz retq 
  400a0f:	90                   	nop
  400a10:	83 ea 02             	sub    $0x2,%edx
  400a13:	b8 01 00 00 00       	mov    $0x1,%eax
  400a18:	89 16                	mov    %edx,(%rsi)
  400a1a:	c3                   	retq   
  400a1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400a20 <dchain_impl_rejuvenate_index>:
  400a20:	83 c6 02             	add    $0x2,%esi
  400a23:	48 63 c6             	movslq %esi,%rax
  400a26:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
  400a2a:	48 63 42 04          	movslq 0x4(%rdx),%rax
  400a2e:	8b 0a                	mov    (%rdx),%ecx
  400a30:	39 c8                	cmp    %ecx,%eax
  400a32:	74 2c                	je     400a60 <dchain_impl_rejuvenate_index+0x40>
  400a34:	4c 63 c1             	movslq %ecx,%r8
  400a37:	42 89 44 c7 04       	mov    %eax,0x4(%rdi,%r8,8)
  400a3c:	89 0c c7             	mov    %ecx,(%rdi,%rax,8)
  400a3f:	48 63 07             	movslq (%rdi),%rax
  400a42:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%rdx)
  400a49:	89 02                	mov    %eax,(%rdx)
  400a4b:	89 74 c7 04          	mov    %esi,0x4(%rdi,%rax,8)
  400a4f:	b8 01 00 00 00       	mov    $0x1,%eax
  400a54:	89 37                	mov    %esi,(%rdi)
  400a56:	c3                   	retq   
  400a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400a5e:	00 00 
  400a60:	85 c0                	test   %eax,%eax
  400a62:	0f 94 c0             	sete   %al
  400a65:	0f b6 c0             	movzbl %al,%eax
  400a68:	c3                   	retq   
  400a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400a70 <map_init_free_list>:
  400a70:	48 8d 47 18          	lea    0x18(%rdi),%rax
  400a74:	48 89 47 10          	mov    %rax,0x10(%rdi)
  400a78:	48 8d 47 30          	lea    0x30(%rdi),%rax
  400a7c:	48 89 47 28          	mov    %rax,0x28(%rdi)
  400a80:	48 8d 47 48          	lea    0x48(%rdi),%rax
  400a84:	48 89 47 40          	mov    %rax,0x40(%rdi)
  400a88:	c3                   	retq   
  400a89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400a90 <map_get_bucket>:
  400a90:	48 83 ec 08          	sub    $0x8,%rsp
  400a94:	48 89 f8             	mov    %rdi,%rax
  400a97:	48 89 f7             	mov    %rsi,%rdi
  400a9a:	ff 90 10 00 10 00    	callq  *0x100010(%rax)
  400aa0:	48 83 c4 08          	add    $0x8,%rsp
  400aa4:	0f b7 c0             	movzwl %ax,%eax
  400aa7:	c3                   	retq   
  400aa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400aaf:	00 

0000000000400ab0 <map_get_free_list>:
  400ab0:	8d 96 00 00 01 00    	lea    0x10000(%rsi),%edx
  400ab6:	eb 0f                	jmp    400ac7 <map_get_free_list+0x17>
  400ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400abf:	00 
  400ac0:	83 c6 01             	add    $0x1,%esi
  400ac3:	39 d6                	cmp    %edx,%esi
  400ac5:	74 19                	je     400ae0 <map_get_free_list+0x30>
  400ac7:	0f b7 c6             	movzwl %si,%eax
  400aca:	48 05 00 00 01 00    	add    $0x10000,%rax
  400ad0:	48 83 3c c7 00       	cmpq   $0x0,(%rdi,%rax,8)
  400ad5:	74 e9                	je     400ac0 <map_get_free_list+0x10>
  400ad7:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
  400adb:	c3                   	retq   
  400adc:	0f 1f 40 00          	nopl   0x0(%rax)
  400ae0:	48 83 ec 08          	sub    $0x8,%rsp
  400ae4:	e8 27 fa ff ff       	callq  400510 <abort@plt>
  400ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400af0 <map_get_node>:
  400af0:	41 55                	push   %r13
  400af2:	41 54                	push   %r12
  400af4:	49 89 cd             	mov    %rcx,%r13
  400af7:	55                   	push   %rbp
  400af8:	53                   	push   %rbx
  400af9:	48 89 fd             	mov    %rdi,%rbp
  400afc:	48 89 d3             	mov    %rdx,%rbx
  400aff:	49 89 f4             	mov    %rsi,%r12
  400b02:	48 89 f7             	mov    %rsi,%rdi
  400b05:	48 83 ec 08          	sub    $0x8,%rsp
  400b09:	ff 95 10 00 10 00    	callq  *0x100010(%rbp)
  400b0f:	0f b7 c0             	movzwl %ax,%eax
  400b12:	48 8b 44 c5 00       	mov    0x0(%rbp,%rax,8),%rax
  400b17:	48 89 03             	mov    %rax,(%rbx)
  400b1a:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
  400b21:	00 
  400b22:	48 8b 03             	mov    (%rbx),%rax
  400b25:	48 85 c0             	test   %rax,%rax
  400b28:	75 1c                	jne    400b46 <map_get_node+0x56>
  400b2a:	eb 3c                	jmp    400b68 <map_get_node+0x78>
  400b2c:	0f 1f 40 00          	nopl   0x0(%rax)
  400b30:	48 8b 03             	mov    (%rbx),%rax
  400b33:	49 89 45 00          	mov    %rax,0x0(%r13)
  400b37:	48 8b 03             	mov    (%rbx),%rax
  400b3a:	48 8b 40 10          	mov    0x10(%rax),%rax
  400b3e:	48 85 c0             	test   %rax,%rax
  400b41:	48 89 03             	mov    %rax,(%rbx)
  400b44:	74 22                	je     400b68 <map_get_node+0x78>
  400b46:	48 8b 30             	mov    (%rax),%rsi
  400b49:	4c 89 e7             	mov    %r12,%rdi
  400b4c:	ff 95 08 00 10 00    	callq  *0x100008(%rbp)
  400b52:	84 c0                	test   %al,%al
  400b54:	74 da                	je     400b30 <map_get_node+0x40>
  400b56:	48 83 c4 08          	add    $0x8,%rsp
  400b5a:	5b                   	pop    %rbx
  400b5b:	5d                   	pop    %rbp
  400b5c:	41 5c                	pop    %r12
  400b5e:	41 5d                	pop    %r13
  400b60:	c3                   	retq   
  400b61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400b68:	48 83 c4 08          	add    $0x8,%rsp
  400b6c:	31 c0                	xor    %eax,%eax
  400b6e:	5b                   	pop    %rbx
  400b6f:	5d                   	pop    %rbp
  400b70:	41 5c                	pop    %r12
  400b72:	41 5d                	pop    %r13
  400b74:	c3                   	retq   
  400b75:	90                   	nop
  400b76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b7d:	00 00 00 

0000000000400b80 <map_allocate>:
  400b80:	41 57                	push   %r15
  400b82:	41 56                	push   %r14
  400b84:	49 89 ff             	mov    %rdi,%r15
  400b87:	41 55                	push   %r13
  400b89:	41 54                	push   %r12
  400b8b:	49 89 f6             	mov    %rsi,%r14
  400b8e:	55                   	push   %rbp
  400b8f:	53                   	push   %rbx
  400b90:	be 18 00 10 00       	mov    $0x100018,%esi
  400b95:	bf 01 00 00 00       	mov    $0x1,%edi
  400b9a:	48 83 ec 18          	sub    $0x18,%rsp
  400b9e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  400ba3:	e8 98 f9 ff ff       	callq  400540 <calloc@plt>
  400ba8:	48 85 c0             	test   %rax,%rax
  400bab:	49 89 c4             	mov    %rax,%r12
  400bae:	74 69                	je     400c19 <map_allocate+0x99>
  400bb0:	48 8d 98 00 00 08 00 	lea    0x80000(%rax),%rbx
  400bb7:	48 8d a8 00 00 10 00 	lea    0x100000(%rax),%rbp
  400bbe:	49 89 dd             	mov    %rbx,%r13
  400bc1:	eb 26                	jmp    400be9 <map_allocate+0x69>
  400bc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400bc8:	48 8d 48 18          	lea    0x18(%rax),%rcx
  400bcc:	49 83 c5 08          	add    $0x8,%r13
  400bd0:	4c 39 ed             	cmp    %r13,%rbp
  400bd3:	48 89 48 10          	mov    %rcx,0x10(%rax)
  400bd7:	48 8d 48 30          	lea    0x30(%rax),%rcx
  400bdb:	48 89 48 28          	mov    %rcx,0x28(%rax)
  400bdf:	48 8d 48 48          	lea    0x48(%rax),%rcx
  400be3:	48 89 48 40          	mov    %rcx,0x40(%rax)
  400be7:	74 49                	je     400c32 <map_allocate+0xb2>
  400be9:	be 18 00 00 00       	mov    $0x18,%esi
  400bee:	bf 04 00 00 00       	mov    $0x4,%edi
  400bf3:	e8 48 f9 ff ff       	callq  400540 <calloc@plt>
  400bf8:	48 85 c0             	test   %rax,%rax
  400bfb:	49 89 45 00          	mov    %rax,0x0(%r13)
  400bff:	75 c7                	jne    400bc8 <map_allocate+0x48>
  400c01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400c08:	48 8b 3b             	mov    (%rbx),%rdi
  400c0b:	48 83 c3 08          	add    $0x8,%rbx
  400c0f:	e8 ec f8 ff ff       	callq  400500 <free@plt>
  400c14:	48 39 dd             	cmp    %rbx,%rbp
  400c17:	75 ef                	jne    400c08 <map_allocate+0x88>
  400c19:	4c 89 e7             	mov    %r12,%rdi
  400c1c:	e8 df f8 ff ff       	callq  400500 <free@plt>
  400c21:	48 83 c4 18          	add    $0x18,%rsp
  400c25:	31 c0                	xor    %eax,%eax
  400c27:	5b                   	pop    %rbx
  400c28:	5d                   	pop    %rbp
  400c29:	41 5c                	pop    %r12
  400c2b:	41 5d                	pop    %r13
  400c2d:	41 5e                	pop    %r14
  400c2f:	41 5f                	pop    %r15
  400c31:	c3                   	retq   
  400c32:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  400c37:	4d 89 bc 24 08 00 10 	mov    %r15,0x100008(%r12)
  400c3e:	00 
  400c3f:	4d 89 b4 24 10 00 10 	mov    %r14,0x100010(%r12)
  400c46:	00 
  400c47:	41 c7 84 24 00 00 10 	movl   $0x0,0x100000(%r12)
  400c4e:	00 00 00 00 00 
  400c53:	4c 89 20             	mov    %r12,(%rax)
  400c56:	48 83 c4 18          	add    $0x18,%rsp
  400c5a:	b8 01 00 00 00       	mov    $0x1,%eax
  400c5f:	5b                   	pop    %rbx
  400c60:	5d                   	pop    %rbp
  400c61:	41 5c                	pop    %r12
  400c63:	41 5d                	pop    %r13
  400c65:	41 5e                	pop    %r14
  400c67:	41 5f                	pop    %r15
  400c69:	c3                   	retq   
  400c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400c70 <map_put>:
  400c70:	41 54                	push   %r12
  400c72:	55                   	push   %rbp
  400c73:	49 89 f4             	mov    %rsi,%r12
  400c76:	53                   	push   %rbx
  400c77:	48 89 fb             	mov    %rdi,%rbx
  400c7a:	89 d5                	mov    %edx,%ebp
  400c7c:	48 89 f7             	mov    %rsi,%rdi
  400c7f:	ff 93 10 00 10 00    	callq  *0x100010(%rbx)
  400c85:	0f b7 c0             	movzwl %ax,%eax
  400c88:	89 c7                	mov    %eax,%edi
  400c8a:	44 8d 88 00 00 01 00 	lea    0x10000(%rax),%r9d
  400c91:	eb 0d                	jmp    400ca0 <map_put+0x30>
  400c93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400c98:	83 c7 01             	add    $0x1,%edi
  400c9b:	44 39 cf             	cmp    %r9d,%edi
  400c9e:	74 40                	je     400ce0 <map_put+0x70>
  400ca0:	0f b7 cf             	movzwl %di,%ecx
  400ca3:	48 81 c1 00 00 01 00 	add    $0x10000,%rcx
  400caa:	4c 8b 04 cb          	mov    (%rbx,%rcx,8),%r8
  400cae:	4d 85 c0             	test   %r8,%r8
  400cb1:	74 e5                	je     400c98 <map_put+0x28>
  400cb3:	49 8b 50 10          	mov    0x10(%r8),%rdx
  400cb7:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
  400cbb:	48 89 14 cb          	mov    %rdx,(%rbx,%rcx,8)
  400cbf:	48 8b 10             	mov    (%rax),%rdx
  400cc2:	4d 89 20             	mov    %r12,(%r8)
  400cc5:	41 89 68 08          	mov    %ebp,0x8(%r8)
  400cc9:	49 89 50 10          	mov    %rdx,0x10(%r8)
  400ccd:	4c 89 00             	mov    %r8,(%rax)
  400cd0:	83 83 00 00 10 00 01 	addl   $0x1,0x100000(%rbx)
  400cd7:	5b                   	pop    %rbx
  400cd8:	5d                   	pop    %rbp
  400cd9:	41 5c                	pop    %r12
  400cdb:	c3                   	retq   
  400cdc:	0f 1f 40 00          	nopl   0x0(%rax)
  400ce0:	e8 2b f8 ff ff       	callq  400510 <abort@plt>
  400ce5:	90                   	nop
  400ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ced:	00 00 00 

0000000000400cf0 <map_erase>:
  400cf0:	41 55                	push   %r13
  400cf2:	41 54                	push   %r12
  400cf4:	49 89 f5             	mov    %rsi,%r13
  400cf7:	55                   	push   %rbp
  400cf8:	53                   	push   %rbx
  400cf9:	48 89 fd             	mov    %rdi,%rbp
  400cfc:	49 89 d4             	mov    %rdx,%r12
  400cff:	48 89 f7             	mov    %rsi,%rdi
  400d02:	48 83 ec 28          	sub    $0x28,%rsp
  400d06:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400d0d:	00 00 
  400d0f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400d14:	31 c0                	xor    %eax,%eax
  400d16:	ff 95 10 00 10 00    	callq  *0x100010(%rbp)
  400d1c:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
  400d21:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  400d26:	4c 89 ee             	mov    %r13,%rsi
  400d29:	48 89 ef             	mov    %rbp,%rdi
  400d2c:	0f b7 d8             	movzwl %ax,%ebx
  400d2f:	e8 bc fd ff ff       	callq  400af0 <map_get_node>
  400d34:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  400d39:	48 85 c0             	test   %rax,%rax
  400d3c:	74 77                	je     400db5 <map_erase+0xc5>
  400d3e:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  400d43:	48 8b 56 10          	mov    0x10(%rsi),%rdx
  400d47:	48 89 50 10          	mov    %rdx,0x10(%rax)
  400d4b:	89 d8                	mov    %ebx,%eax
  400d4d:	8d 8b 00 00 01 00    	lea    0x10000(%rbx),%ecx
  400d53:	eb 0a                	jmp    400d5f <map_erase+0x6f>
  400d55:	0f 1f 00             	nopl   (%rax)
  400d58:	83 c0 01             	add    $0x1,%eax
  400d5b:	39 c8                	cmp    %ecx,%eax
  400d5d:	74 51                	je     400db0 <map_erase+0xc0>
  400d5f:	0f b7 d0             	movzwl %ax,%edx
  400d62:	48 83 bc d5 00 00 08 	cmpq   $0x0,0x80000(%rbp,%rdx,8)
  400d69:	00 00 
  400d6b:	74 eb                	je     400d58 <map_erase+0x68>
  400d6d:	48 8d 44 d5 00       	lea    0x0(%rbp,%rdx,8),%rax
  400d72:	48 8b 90 00 00 08 00 	mov    0x80000(%rax),%rdx
  400d79:	48 89 56 10          	mov    %rdx,0x10(%rsi)
  400d7d:	48 89 b0 00 00 08 00 	mov    %rsi,0x80000(%rax)
  400d84:	48 8b 06             	mov    (%rsi),%rax
  400d87:	83 ad 00 00 10 00 01 	subl   $0x1,0x100000(%rbp)
  400d8e:	49 89 04 24          	mov    %rax,(%r12)
  400d92:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  400d97:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
  400d9e:	00 00 
  400da0:	75 26                	jne    400dc8 <map_erase+0xd8>
  400da2:	48 83 c4 28          	add    $0x28,%rsp
  400da6:	5b                   	pop    %rbx
  400da7:	5d                   	pop    %rbp
  400da8:	41 5c                	pop    %r12
  400daa:	41 5d                	pop    %r13
  400dac:	c3                   	retq   
  400dad:	0f 1f 00             	nopl   (%rax)
  400db0:	e8 5b f7 ff ff       	callq  400510 <abort@plt>
  400db5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  400dba:	48 63 c3             	movslq %ebx,%rax
  400dbd:	48 8b 56 10          	mov    0x10(%rsi),%rdx
  400dc1:	48 89 54 c5 00       	mov    %rdx,0x0(%rbp,%rax,8)
  400dc6:	eb 83                	jmp    400d4b <map_erase+0x5b>
  400dc8:	e8 53 f7 ff ff       	callq  400520 <__stack_chk_fail@plt>
  400dcd:	0f 1f 00             	nopl   (%rax)

0000000000400dd0 <map_get>:
  400dd0:	53                   	push   %rbx
  400dd1:	48 89 d3             	mov    %rdx,%rbx
  400dd4:	48 83 ec 20          	sub    $0x20,%rsp
  400dd8:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
  400ddd:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
  400de2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400de9:	00 00 
  400deb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400df0:	31 c0                	xor    %eax,%eax
  400df2:	e8 f9 fc ff ff       	callq  400af0 <map_get_node>
  400df7:	31 d2                	xor    %edx,%edx
  400df9:	84 c0                	test   %al,%al
  400dfb:	74 0f                	je     400e0c <map_get+0x3c>
  400dfd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  400e02:	ba 01 00 00 00       	mov    $0x1,%edx
  400e07:	8b 40 08             	mov    0x8(%rax),%eax
  400e0a:	89 03                	mov    %eax,(%rbx)
  400e0c:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  400e11:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  400e18:	00 00 
  400e1a:	89 d0                	mov    %edx,%eax
  400e1c:	75 06                	jne    400e24 <map_get+0x54>
  400e1e:	48 83 c4 20          	add    $0x20,%rsp
  400e22:	5b                   	pop    %rbx
  400e23:	c3                   	retq   
  400e24:	e8 f7 f6 ff ff       	callq  400520 <__stack_chk_fail@plt>
  400e29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e30 <map_size>:
  400e30:	8b 87 00 00 10 00    	mov    0x100000(%rdi),%eax
  400e36:	c3                   	retq   
  400e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400e3e:	00 00 

0000000000400e40 <dmap_allocate>:
  400e40:	41 57                	push   %r15
  400e42:	41 56                	push   %r14
  400e44:	4d 89 cf             	mov    %r9,%r15
  400e47:	41 55                	push   %r13
  400e49:	41 54                	push   %r12
  400e4b:	45 89 c4             	mov    %r8d,%r12d
  400e4e:	55                   	push   %rbp
  400e4f:	53                   	push   %rbx
  400e50:	48 89 d3             	mov    %rdx,%rbx
  400e53:	48 89 cd             	mov    %rcx,%rbp
  400e56:	48 83 ec 48          	sub    $0x48,%rsp
  400e5a:	48 8b 84 24 90 00 00 	mov    0x90(%rsp),%rax
  400e61:	00 
  400e62:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
  400e69:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
  400e6e:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
  400e75:	00 
  400e76:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
  400e7d:	00 
  400e7e:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
  400e85:	00 00 
  400e87:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  400e8c:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
  400e93:	00 
  400e94:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  400e99:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  400ea0:	00 00 
  400ea2:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  400ea7:	31 c0                	xor    %eax,%eax
  400ea9:	e8 d2 fc ff ff       	callq  400b80 <map_allocate>
  400eae:	85 c0                	test   %eax,%eax
  400eb0:	74 24                	je     400ed6 <dmap_allocate+0x96>
  400eb2:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
  400eb9:	48 8d 4c 24 30       	lea    0x30(%rsp),%rcx
  400ebe:	48 89 ee             	mov    %rbp,%rsi
  400ec1:	48 89 df             	mov    %rbx,%rdi
  400ec4:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
  400ecb:	00 00 
  400ecd:	e8 ae fc ff ff       	callq  400b80 <map_allocate>
  400ed2:	85 c0                	test   %eax,%eax
  400ed4:	75 4a                	jne    400f20 <dmap_allocate+0xe0>
  400ed6:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  400edb:	e8 20 f6 ff ff       	callq  400500 <free@plt>
  400ee0:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  400ee5:	e8 16 f6 ff ff       	callq  400500 <free@plt>
  400eea:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  400eef:	e8 0c f6 ff ff       	callq  400500 <free@plt>
  400ef4:	31 c0                	xor    %eax,%eax
  400ef6:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
  400efb:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
  400f02:	00 00 
  400f04:	0f 85 93 00 00 00    	jne    400f9d <dmap_allocate+0x15d>
  400f0a:	48 83 c4 48          	add    $0x48,%rsp
  400f0e:	5b                   	pop    %rbx
  400f0f:	5d                   	pop    %rbp
  400f10:	41 5c                	pop    %r12
  400f12:	41 5d                	pop    %r13
  400f14:	41 5e                	pop    %r14
  400f16:	41 5f                	pop    %r15
  400f18:	c3                   	retq   
  400f19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400f20:	48 63 bc 24 a0 00 00 	movslq 0xa0(%rsp),%rdi
  400f27:	00 
  400f28:	49 63 f4             	movslq %r12d,%rsi
  400f2b:	e8 10 f6 ff ff       	callq  400540 <calloc@plt>
  400f30:	48 85 c0             	test   %rax,%rax
  400f33:	48 89 c3             	mov    %rax,%rbx
  400f36:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  400f3b:	74 99                	je     400ed6 <dmap_allocate+0x96>
  400f3d:	bf 48 00 00 00       	mov    $0x48,%edi
  400f42:	e8 09 f6 ff ff       	callq  400550 <malloc@plt>
  400f47:	48 85 c0             	test   %rax,%rax
  400f4a:	74 8a                	je     400ed6 <dmap_allocate+0x96>
  400f4c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
  400f51:	48 89 58 20          	mov    %rbx,0x20(%rax)
  400f55:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  400f5a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
  400f61:	44 89 60 18          	mov    %r12d,0x18(%rax)
  400f65:	4c 89 78 28          	mov    %r15,0x28(%rax)
  400f69:	48 89 10             	mov    %rdx,(%rax)
  400f6c:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  400f71:	4c 89 70 30          	mov    %r14,0x30(%rax)
  400f75:	4c 89 68 38          	mov    %r13,0x38(%rax)
  400f79:	48 89 03             	mov    %rax,(%rbx)
  400f7c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  400f80:	8b 94 24 98 00 00 00 	mov    0x98(%rsp),%edx
  400f87:	89 50 14             	mov    %edx,0x14(%rax)
  400f8a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
  400f8f:	48 89 50 40          	mov    %rdx,0x40(%rax)
  400f93:	b8 01 00 00 00       	mov    $0x1,%eax
  400f98:	e9 59 ff ff ff       	jmpq   400ef6 <dmap_allocate+0xb6>
  400f9d:	e8 7e f5 ff ff       	callq  400520 <__stack_chk_fail@plt>
  400fa2:	0f 1f 40 00          	nopl   0x0(%rax)
  400fa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400fad:	00 00 00 

0000000000400fb0 <dmap_get_a>:
  400fb0:	48 8b 3f             	mov    (%rdi),%rdi
  400fb3:	e9 18 fe ff ff       	jmpq   400dd0 <map_get>
  400fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400fbf:	00 

0000000000400fc0 <dmap_get_b>:
  400fc0:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  400fc4:	e9 07 fe ff ff       	jmpq   400dd0 <map_get>
  400fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400fd0 <dmap_get_value>:
  400fd0:	48 8b 47 20          	mov    0x20(%rdi),%rax
  400fd4:	48 63 f6             	movslq %esi,%rsi
  400fd7:	48 8b 34 f0          	mov    (%rax,%rsi,8),%rsi
  400fdb:	48 8b 47 28          	mov    0x28(%rdi),%rax
  400fdf:	48 89 d7             	mov    %rdx,%rdi
  400fe2:	ff e0                	jmpq   *%rax
  400fe4:	66 90                	xchg   %ax,%ax
  400fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400fed:	00 00 00 

0000000000400ff0 <dmap_put>:
  400ff0:	41 55                	push   %r13
  400ff2:	41 54                	push   %r12
  400ff4:	49 89 f5             	mov    %rsi,%r13
  400ff7:	55                   	push   %rbp
  400ff8:	53                   	push   %rbx
  400ff9:	48 89 fb             	mov    %rdi,%rbx
  400ffc:	41 89 d4             	mov    %edx,%r12d
  400fff:	48 83 ec 28          	sub    $0x28,%rsp
  401003:	48 63 7f 18          	movslq 0x18(%rdi),%rdi
  401007:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40100e:	00 00 
  401010:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  401015:	31 c0                	xor    %eax,%eax
  401017:	e8 34 f5 ff ff       	callq  400550 <malloc@plt>
  40101c:	48 89 c5             	mov    %rax,%rbp
  40101f:	31 c0                	xor    %eax,%eax
  401021:	48 85 ed             	test   %rbp,%rbp
  401024:	74 4e                	je     401074 <dmap_put+0x84>
  401026:	4c 89 ee             	mov    %r13,%rsi
  401029:	48 89 ef             	mov    %rbp,%rdi
  40102c:	ff 53 28             	callq  *0x28(%rbx)
  40102f:	48 8b 43 20          	mov    0x20(%rbx),%rax
  401033:	49 63 d4             	movslq %r12d,%rdx
  401036:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  40103b:	48 89 ef             	mov    %rbp,%rdi
  40103e:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
  401042:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  401047:	ff 53 38             	callq  *0x38(%rbx)
  40104a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  40104f:	48 8b 3b             	mov    (%rbx),%rdi
  401052:	44 89 e2             	mov    %r12d,%edx
  401055:	e8 16 fc ff ff       	callq  400c70 <map_put>
  40105a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  40105e:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  401063:	44 89 e2             	mov    %r12d,%edx
  401066:	e8 05 fc ff ff       	callq  400c70 <map_put>
  40106b:	83 43 10 01          	addl   $0x1,0x10(%rbx)
  40106f:	b8 01 00 00 00       	mov    $0x1,%eax
  401074:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  401079:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  401080:	00 00 
  401082:	75 0b                	jne    40108f <dmap_put+0x9f>
  401084:	48 83 c4 28          	add    $0x28,%rsp
  401088:	5b                   	pop    %rbx
  401089:	5d                   	pop    %rbp
  40108a:	41 5c                	pop    %r12
  40108c:	41 5d                	pop    %r13
  40108e:	c3                   	retq   
  40108f:	e8 8c f4 ff ff       	callq  400520 <__stack_chk_fail@plt>
  401094:	66 90                	xchg   %ax,%ax
  401096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40109d:	00 00 00 

00000000004010a0 <dmap_erase>:
  4010a0:	55                   	push   %rbp
  4010a1:	53                   	push   %rbx
  4010a2:	48 63 f6             	movslq %esi,%rsi
  4010a5:	48 89 fb             	mov    %rdi,%rbx
  4010a8:	48 83 ec 38          	sub    $0x38,%rsp
  4010ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4010b3:	00 00 
  4010b5:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4010ba:	31 c0                	xor    %eax,%eax
  4010bc:	48 8b 47 20          	mov    0x20(%rdi),%rax
  4010c0:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
  4010c5:	48 8b 2c f0          	mov    (%rax,%rsi,8),%rbp
  4010c9:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
  4010ce:	48 89 ef             	mov    %rbp,%rdi
  4010d1:	ff 53 38             	callq  *0x38(%rbx)
  4010d4:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  4010d9:	48 8b 3b             	mov    (%rbx),%rdi
  4010dc:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
  4010e1:	e8 0a fc ff ff       	callq  400cf0 <map_erase>
  4010e6:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  4010ea:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  4010ef:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
  4010f4:	e8 f7 fb ff ff       	callq  400cf0 <map_erase>
  4010f9:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  4010fe:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  401103:	48 89 ef             	mov    %rbp,%rdi
  401106:	ff 53 40             	callq  *0x40(%rbx)
  401109:	48 89 ef             	mov    %rbp,%rdi
  40110c:	e8 ef f3 ff ff       	callq  400500 <free@plt>
  401111:	83 6b 10 01          	subl   $0x1,0x10(%rbx)
  401115:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40111a:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  401121:	00 00 
  401123:	75 0c                	jne    401131 <dmap_erase+0x91>
  401125:	48 83 c4 38          	add    $0x38,%rsp
  401129:	b8 01 00 00 00       	mov    $0x1,%eax
  40112e:	5b                   	pop    %rbx
  40112f:	5d                   	pop    %rbp
  401130:	c3                   	retq   
  401131:	e8 ea f3 ff ff       	callq  400520 <__stack_chk_fail@plt>
  401136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40113d:	00 00 00 

0000000000401140 <dmap_size>:
  401140:	8b 47 10             	mov    0x10(%rdi),%eax
  401143:	c3                   	retq   
  401144:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40114b:	00 00 00 
  40114e:	66 90                	xchg   %ax,%ax

0000000000401150 <vector_allocate>:
  401150:	41 57                	push   %r15
  401152:	41 56                	push   %r14
  401154:	45 31 f6             	xor    %r14d,%r14d
  401157:	41 55                	push   %r13
  401159:	41 54                	push   %r12
  40115b:	49 89 d5             	mov    %rdx,%r13
  40115e:	55                   	push   %rbp
  40115f:	53                   	push   %rbx
  401160:	48 63 df             	movslq %edi,%rbx
  401163:	bf 10 00 00 00       	mov    $0x10,%edi
  401168:	89 f5                	mov    %esi,%ebp
  40116a:	49 89 cc             	mov    %rcx,%r12
  40116d:	48 83 ec 18          	sub    $0x18,%rsp
  401171:	48 8b 01             	mov    (%rcx),%rax
  401174:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401179:	e8 d2 f3 ff ff       	callq  400550 <malloc@plt>
  40117e:	48 85 c0             	test   %rax,%rax
  401181:	74 5c                	je     4011df <vector_allocate+0x8f>
  401183:	89 df                	mov    %ebx,%edi
  401185:	49 89 04 24          	mov    %rax,(%r12)
  401189:	49 89 c7             	mov    %rax,%r15
  40118c:	0f af fd             	imul   %ebp,%edi
  40118f:	48 63 ff             	movslq %edi,%rdi
  401192:	e8 b9 f3 ff ff       	callq  400550 <malloc@plt>
  401197:	48 85 c0             	test   %rax,%rax
  40119a:	74 55                	je     4011f1 <vector_allocate+0xa1>
  40119c:	85 ed                	test   %ebp,%ebp
  40119e:	49 89 07             	mov    %rax,(%r15)
  4011a1:	41 89 5f 08          	mov    %ebx,0x8(%r15)
  4011a5:	41 89 6f 0c          	mov    %ebp,0xc(%r15)
  4011a9:	7e 2e                	jle    4011d9 <vector_allocate+0x89>
  4011ab:	48 89 c7             	mov    %rax,%rdi
  4011ae:	45 31 ff             	xor    %r15d,%r15d
  4011b1:	45 31 f6             	xor    %r14d,%r14d
  4011b4:	eb 11                	jmp    4011c7 <vector_allocate+0x77>
  4011b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4011bd:	00 00 00 
  4011c0:	49 8b 04 24          	mov    (%r12),%rax
  4011c4:	48 8b 38             	mov    (%rax),%rdi
  4011c7:	41 83 c6 01          	add    $0x1,%r14d
  4011cb:	4c 01 ff             	add    %r15,%rdi
  4011ce:	49 01 df             	add    %rbx,%r15
  4011d1:	41 ff d5             	callq  *%r13
  4011d4:	44 39 f5             	cmp    %r14d,%ebp
  4011d7:	75 e7                	jne    4011c0 <vector_allocate+0x70>
  4011d9:	41 be 01 00 00 00    	mov    $0x1,%r14d
  4011df:	48 83 c4 18          	add    $0x18,%rsp
  4011e3:	44 89 f0             	mov    %r14d,%eax
  4011e6:	5b                   	pop    %rbx
  4011e7:	5d                   	pop    %rbp
  4011e8:	41 5c                	pop    %r12
  4011ea:	41 5d                	pop    %r13
  4011ec:	41 5e                	pop    %r14
  4011ee:	41 5f                	pop    %r15
  4011f0:	c3                   	retq   
  4011f1:	4c 89 ff             	mov    %r15,%rdi
  4011f4:	e8 07 f3 ff ff       	callq  400500 <free@plt>
  4011f9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4011fe:	49 89 04 24          	mov    %rax,(%r12)
  401202:	eb db                	jmp    4011df <vector_allocate+0x8f>
  401204:	66 90                	xchg   %ax,%ax
  401206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40120d:	00 00 00 

0000000000401210 <vector_borrow_full>:
  401210:	0f af 77 08          	imul   0x8(%rdi),%esi
  401214:	48 63 f6             	movslq %esi,%rsi
  401217:	48 03 37             	add    (%rdi),%rsi
  40121a:	48 89 32             	mov    %rsi,(%rdx)
  40121d:	c3                   	retq   
  40121e:	66 90                	xchg   %ax,%ax

0000000000401220 <vector_borrow_half>:
  401220:	0f af 77 08          	imul   0x8(%rdi),%esi
  401224:	48 63 f6             	movslq %esi,%rsi
  401227:	48 03 37             	add    (%rdi),%rsi
  40122a:	48 89 32             	mov    %rsi,(%rdx)
  40122d:	c3                   	retq   
  40122e:	66 90                	xchg   %ax,%ax

0000000000401230 <vector_return_full>:
  401230:	f3 c3                	repz retq 
  401232:	0f 1f 40 00          	nopl   0x0(%rax)
  401236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40123d:	00 00 00 

0000000000401240 <vector_return_half>:
  401240:	f3 c3                	repz retq 
  401242:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401249:	00 00 00 
  40124c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401250 <int_key_eq>:
  401250:	31 c0                	xor    %eax,%eax
  401252:	8b 0e                	mov    (%rsi),%ecx
  401254:	39 0f                	cmp    %ecx,(%rdi)
  401256:	74 08                	je     401260 <int_key_eq+0x10>
  401258:	f3 c3                	repz retq 
  40125a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401260:	8b 56 04             	mov    0x4(%rsi),%edx
  401263:	39 57 04             	cmp    %edx,0x4(%rdi)
  401266:	75 f0                	jne    401258 <int_key_eq+0x8>
  401268:	8b 56 08             	mov    0x8(%rsi),%edx
  40126b:	39 57 08             	cmp    %edx,0x8(%rdi)
  40126e:	75 e8                	jne    401258 <int_key_eq+0x8>
  401270:	8b 57 0c             	mov    0xc(%rdi),%edx
  401273:	8b 46 0c             	mov    0xc(%rsi),%eax
  401276:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
  40127c:	25 ff ff ff 00       	and    $0xffffff,%eax
  401281:	39 c2                	cmp    %eax,%edx
  401283:	0f 94 c0             	sete   %al
  401286:	c3                   	retq   
  401287:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40128e:	00 00 

0000000000401290 <ext_key_eq>:
  401290:	31 c0                	xor    %eax,%eax
  401292:	8b 0e                	mov    (%rsi),%ecx
  401294:	39 0f                	cmp    %ecx,(%rdi)
  401296:	74 08                	je     4012a0 <ext_key_eq+0x10>
  401298:	f3 c3                	repz retq 
  40129a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4012a0:	8b 56 04             	mov    0x4(%rsi),%edx
  4012a3:	39 57 04             	cmp    %edx,0x4(%rdi)
  4012a6:	75 f0                	jne    401298 <ext_key_eq+0x8>
  4012a8:	8b 56 08             	mov    0x8(%rsi),%edx
  4012ab:	39 57 08             	cmp    %edx,0x8(%rdi)
  4012ae:	75 e8                	jne    401298 <ext_key_eq+0x8>
  4012b0:	8b 57 0c             	mov    0xc(%rdi),%edx
  4012b3:	8b 46 0c             	mov    0xc(%rsi),%eax
  4012b6:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
  4012bc:	25 ff ff ff 00       	and    $0xffffff,%eax
  4012c1:	39 c2                	cmp    %eax,%edx
  4012c3:	0f 94 c0             	sete   %al
  4012c6:	c3                   	retq   
  4012c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4012ce:	00 00 

00000000004012d0 <int_key_hash>:
  4012d0:	0f b7 07             	movzwl (%rdi),%eax
  4012d3:	48 89 c2             	mov    %rax,%rdx
  4012d6:	48 c1 e2 05          	shl    $0x5,%rdx
  4012da:	48 29 c2             	sub    %rax,%rdx
  4012dd:	0f b7 47 02          	movzwl 0x2(%rdi),%eax
  4012e1:	48 01 c2             	add    %rax,%rdx
  4012e4:	48 89 d0             	mov    %rdx,%rax
  4012e7:	48 c1 e0 05          	shl    $0x5,%rax
  4012eb:	48 29 d0             	sub    %rdx,%rax
  4012ee:	8b 57 04             	mov    0x4(%rdi),%edx
  4012f1:	48 01 d0             	add    %rdx,%rax
  4012f4:	48 89 c2             	mov    %rax,%rdx
  4012f7:	48 c1 e2 05          	shl    $0x5,%rdx
  4012fb:	48 29 c2             	sub    %rax,%rdx
  4012fe:	8b 47 08             	mov    0x8(%rdi),%eax
  401301:	48 01 c2             	add    %rax,%rdx
  401304:	48 89 d0             	mov    %rdx,%rax
  401307:	48 c1 e0 05          	shl    $0x5,%rax
  40130b:	48 29 d0             	sub    %rdx,%rax
  40130e:	0f b7 57 0c          	movzwl 0xc(%rdi),%edx
  401312:	48 01 d0             	add    %rdx,%rax
  401315:	48 ba 03 00 00 00 01 	movabs $0x8000000100000003,%rdx
  40131c:	00 00 80 
  40131f:	48 89 c1             	mov    %rax,%rcx
  401322:	48 c1 e1 05          	shl    $0x5,%rcx
  401326:	48 29 c1             	sub    %rax,%rcx
  401329:	0f b6 47 0e          	movzbl 0xe(%rdi),%eax
  40132d:	48 01 c1             	add    %rax,%rcx
  401330:	48 89 c8             	mov    %rcx,%rax
  401333:	48 f7 ea             	imul   %rdx
  401336:	48 89 c8             	mov    %rcx,%rax
  401339:	48 c1 f8 3f          	sar    $0x3f,%rax
  40133d:	48 01 ca             	add    %rcx,%rdx
  401340:	48 c1 fa 1e          	sar    $0x1e,%rdx
  401344:	48 29 c2             	sub    %rax,%rdx
  401347:	48 89 d0             	mov    %rdx,%rax
  40134a:	48 c1 e0 1f          	shl    $0x1f,%rax
  40134e:	48 29 d0             	sub    %rdx,%rax
  401351:	48 29 c1             	sub    %rax,%rcx
  401354:	48 89 c8             	mov    %rcx,%rax
  401357:	c3                   	retq   
  401358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40135f:	00 

0000000000401360 <ext_key_hash>:
  401360:	0f b7 07             	movzwl (%rdi),%eax
  401363:	48 89 c2             	mov    %rax,%rdx
  401366:	48 c1 e2 05          	shl    $0x5,%rdx
  40136a:	48 29 c2             	sub    %rax,%rdx
  40136d:	0f b7 47 02          	movzwl 0x2(%rdi),%eax
  401371:	48 01 c2             	add    %rax,%rdx
  401374:	48 89 d0             	mov    %rdx,%rax
  401377:	48 c1 e0 05          	shl    $0x5,%rax
  40137b:	48 29 d0             	sub    %rdx,%rax
  40137e:	8b 57 04             	mov    0x4(%rdi),%edx
  401381:	48 01 d0             	add    %rdx,%rax
  401384:	48 89 c2             	mov    %rax,%rdx
  401387:	48 c1 e2 05          	shl    $0x5,%rdx
  40138b:	48 29 c2             	sub    %rax,%rdx
  40138e:	8b 47 08             	mov    0x8(%rdi),%eax
  401391:	48 01 c2             	add    %rax,%rdx
  401394:	48 89 d0             	mov    %rdx,%rax
  401397:	48 c1 e0 05          	shl    $0x5,%rax
  40139b:	48 29 d0             	sub    %rdx,%rax
  40139e:	0f b7 57 0c          	movzwl 0xc(%rdi),%edx
  4013a2:	48 01 d0             	add    %rdx,%rax
  4013a5:	48 ba 03 00 00 00 01 	movabs $0x8000000100000003,%rdx
  4013ac:	00 00 80 
  4013af:	48 89 c1             	mov    %rax,%rcx
  4013b2:	48 c1 e1 05          	shl    $0x5,%rcx
  4013b6:	48 29 c1             	sub    %rax,%rcx
  4013b9:	0f b6 47 0e          	movzbl 0xe(%rdi),%eax
  4013bd:	48 01 c1             	add    %rax,%rcx
  4013c0:	48 89 c8             	mov    %rcx,%rax
  4013c3:	48 f7 ea             	imul   %rdx
  4013c6:	48 89 c8             	mov    %rcx,%rax
  4013c9:	48 c1 f8 3f          	sar    $0x3f,%rax
  4013cd:	48 01 ca             	add    %rcx,%rdx
  4013d0:	48 c1 fa 1e          	sar    $0x1e,%rdx
  4013d4:	48 29 c2             	sub    %rax,%rdx
  4013d7:	48 89 d0             	mov    %rdx,%rax
  4013da:	48 c1 e0 1f          	shl    $0x1f,%rax
  4013de:	48 29 d0             	sub    %rdx,%rax
  4013e1:	48 29 c1             	sub    %rax,%rcx
  4013e4:	48 89 c8             	mov    %rcx,%rax
  4013e7:	c3                   	retq   
  4013e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4013ef:	00 

00000000004013f0 <flow_extract_keys>:
  4013f0:	48 89 3e             	mov    %rdi,(%rsi)
  4013f3:	48 83 c7 10          	add    $0x10,%rdi
  4013f7:	48 89 3a             	mov    %rdi,(%rdx)
  4013fa:	c3                   	retq   
  4013fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401400 <flow_pack_keys>:
  401400:	f3 c3                	repz retq 
  401402:	0f 1f 40 00          	nopl   0x0(%rax)
  401406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40140d:	00 00 00 

0000000000401410 <flow_cpy>:
  401410:	0f b7 06             	movzwl (%rsi),%eax
  401413:	66 89 07             	mov    %ax,(%rdi)
  401416:	0f b7 46 02          	movzwl 0x2(%rsi),%eax
  40141a:	66 89 47 02          	mov    %ax,0x2(%rdi)
  40141e:	8b 46 04             	mov    0x4(%rsi),%eax
  401421:	89 47 04             	mov    %eax,0x4(%rdi)
  401424:	8b 46 08             	mov    0x8(%rsi),%eax
  401427:	89 47 08             	mov    %eax,0x8(%rdi)
  40142a:	0f b7 46 0c          	movzwl 0xc(%rsi),%eax
  40142e:	66 89 47 0c          	mov    %ax,0xc(%rdi)
  401432:	0f b6 46 0e          	movzbl 0xe(%rsi),%eax
  401436:	88 47 0e             	mov    %al,0xe(%rdi)
  401439:	0f b7 46 10          	movzwl 0x10(%rsi),%eax
  40143d:	66 89 47 10          	mov    %ax,0x10(%rdi)
  401441:	0f b7 46 12          	movzwl 0x12(%rsi),%eax
  401445:	66 89 47 12          	mov    %ax,0x12(%rdi)
  401449:	8b 46 14             	mov    0x14(%rsi),%eax
  40144c:	89 47 14             	mov    %eax,0x14(%rdi)
  40144f:	8b 46 18             	mov    0x18(%rsi),%eax
  401452:	89 47 18             	mov    %eax,0x18(%rdi)
  401455:	0f b7 46 1c          	movzwl 0x1c(%rsi),%eax
  401459:	66 89 47 1c          	mov    %ax,0x1c(%rdi)
  40145d:	0f b6 46 1e          	movzbl 0x1e(%rsi),%eax
  401461:	88 47 1e             	mov    %al,0x1e(%rdi)
  401464:	0f b7 46 20          	movzwl 0x20(%rsi),%eax
  401468:	66 89 47 20          	mov    %ax,0x20(%rdi)
  40146c:	0f b7 46 22          	movzwl 0x22(%rsi),%eax
  401470:	66 89 47 22          	mov    %ax,0x22(%rdi)
  401474:	0f b7 46 24          	movzwl 0x24(%rsi),%eax
  401478:	66 89 47 24          	mov    %ax,0x24(%rdi)
  40147c:	8b 46 28             	mov    0x28(%rsi),%eax
  40147f:	89 47 28             	mov    %eax,0x28(%rdi)
  401482:	8b 46 2c             	mov    0x2c(%rsi),%eax
  401485:	89 47 2c             	mov    %eax,0x2c(%rdi)
  401488:	8b 46 30             	mov    0x30(%rsi),%eax
  40148b:	89 47 30             	mov    %eax,0x30(%rdi)
  40148e:	0f b7 46 34          	movzwl 0x34(%rsi),%eax
  401492:	66 89 47 34          	mov    %ax,0x34(%rdi)
  401496:	0f b7 46 36          	movzwl 0x36(%rsi),%eax
  40149a:	66 89 47 36          	mov    %ax,0x36(%rdi)
  40149e:	0f b6 46 38          	movzbl 0x38(%rsi),%eax
  4014a2:	88 47 38             	mov    %al,0x38(%rdi)
  4014a5:	c3                   	retq   
  4014a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4014ad:	00 00 00 

00000000004014b0 <flow_destroy>:
  4014b0:	f3 c3                	repz retq 
  4014b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4014b9:	00 00 00 
  4014bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004014c0 <__libc_csu_init>:
  4014c0:	41 57                	push   %r15
  4014c2:	41 56                	push   %r14
  4014c4:	41 89 ff             	mov    %edi,%r15d
  4014c7:	41 55                	push   %r13
  4014c9:	41 54                	push   %r12
  4014cb:	4c 8d 25 3e 09 20 00 	lea    0x20093e(%rip),%r12        # 601e10 <__frame_dummy_init_array_entry>
  4014d2:	55                   	push   %rbp
  4014d3:	48 8d 2d 3e 09 20 00 	lea    0x20093e(%rip),%rbp        # 601e18 <__init_array_end>
  4014da:	53                   	push   %rbx
  4014db:	49 89 f6             	mov    %rsi,%r14
  4014de:	49 89 d5             	mov    %rdx,%r13
  4014e1:	4c 29 e5             	sub    %r12,%rbp
  4014e4:	48 83 ec 08          	sub    $0x8,%rsp
  4014e8:	48 c1 fd 03          	sar    $0x3,%rbp
  4014ec:	e8 df ef ff ff       	callq  4004d0 <_init>
  4014f1:	48 85 ed             	test   %rbp,%rbp
  4014f4:	74 20                	je     401516 <__libc_csu_init+0x56>
  4014f6:	31 db                	xor    %ebx,%ebx
  4014f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4014ff:	00 
  401500:	4c 89 ea             	mov    %r13,%rdx
  401503:	4c 89 f6             	mov    %r14,%rsi
  401506:	44 89 ff             	mov    %r15d,%edi
  401509:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40150d:	48 83 c3 01          	add    $0x1,%rbx
  401511:	48 39 eb             	cmp    %rbp,%rbx
  401514:	75 ea                	jne    401500 <__libc_csu_init+0x40>
  401516:	48 83 c4 08          	add    $0x8,%rsp
  40151a:	5b                   	pop    %rbx
  40151b:	5d                   	pop    %rbp
  40151c:	41 5c                	pop    %r12
  40151e:	41 5d                	pop    %r13
  401520:	41 5e                	pop    %r14
  401522:	41 5f                	pop    %r15
  401524:	c3                   	retq   
  401525:	90                   	nop
  401526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40152d:	00 00 00 

0000000000401530 <__libc_csu_fini>:
  401530:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000401534 <_fini>:
  401534:	48 83 ec 08          	sub    $0x8,%rsp
  401538:	48 83 c4 08          	add    $0x8,%rsp
  40153c:	c3                   	retq   
